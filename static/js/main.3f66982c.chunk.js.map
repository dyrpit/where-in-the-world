{"version":3,"sources":["serviceWorkerRegistration.ts","hooks/useToggleTheme.tsx","hooks/useFetch.tsx","theme/theme.tsx","components/ContentWrapper/ContentWrapper.styles.tsx","components/ContentWrapper/ContentWrapper.tsx","components/Button/Button.styles.tsx","components/Button/Button.tsx","utils/getPopulationNumberWithComas.ts","components/ErrorFallback/ErrorFallback.styles.tsx","components/ErrorFallback/ErrorFallback.tsx","components/Spinner/Spinner.styles.tsx","components/Spinner/Spinner.tsx","components/BorderCountryItem/BorderCountryItem.styles.tsx","components/BorderCountryItem/BorderCountryItem.tsx","components/CountryDetailsField/CountryDetailsField.styles.tsx","components/CountryDetailsField/CountryDetailsField.tsx","components/CountryDetails/CountryDetails.styles.tsx","components/CountryDetails/CountryDetails.tsx","views/DetailsView/DetailsView.tsx","services/CountriesService.ts","hooks/useSearch.tsx","components/CountryItem/CountryItem.styles.tsx","components/CountryItem/CountryItem.tsx","components/Tooltip/Tooltip.styles.tsx","components/Tooltip/Tooltip.tsx","components/FilterBy/FilterBy.styles.tsx","components/FilterBy/FilterBy.tsx","components/SearchInput/SearchInput.styles.tsx","components/SearchInput/SearchInput.tsx","components/Filter/Filter.styles.tsx","components/Filter/Filter.tsx","components/PaginationControl/PaginationControl.styles.tsx","components/PaginationControl/PaginationControl.tsx","views/HomeView/HomeView.styles.tsx","views/HomeView/HomeView.tsx","hooks/usePagination.tsx","components/Nav/Nav.styles.tsx","components/Nav/Nav.tsx","images/pirate.svg","views/PageNotFoundView/PageNotFound.styles.tsx","views/PageNotFoundView/PageNotFoundView.tsx","theme/GlobalStyles.tsx","App.tsx","index.tsx"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","THEME","useFetch","url","useState","data","setData","isLoading","setIsLoading","setError","cache","useRef","cancel","useEffect","a","current","axios","get","Error","message","fetchData","defaultTheme","boxShadow","fontSize","s","m","l","xl","xxl","sl","fontWeight","thin","regular","bold","devices","mobileM","tablet","laptop","desktop","lightTheme","color","text","background","elements","input","darkTheme","StyledWrapper","styled","main","theme","ContentWrapper","children","StyledButton","button","Button","handleGoBack","title","onClick","className","getPopulationNumberWithComas","value","valueArr","toString","split","reverse","lenght","length","resultArr","i","push","join","StyledErrorFallbackWrapper","div","StyledErrorFallbackHighlight","span","ErrorFallback","errorMsg","StyledSpinnerWrapper","size","StyledSpinnerText","p","Spinner","useTheme","loading","StyledBorderCountry","Link","BorderCountryItem","border","borderCountry","setBorderCountry","country","name","common","fetchBorderCountry","to","StyledCountryField","StyledCountryFieldName","StyledCountryFieldNameValue","CountryDetailsField","fieldName","fieldValue","Array","isArray","map","Object","keys","StyledDetailsWrapper","StyledImgWrapper","StyledImg","img","StyledCountryDetails","StyledCountryDetailsSection","StyledCountryName","StyledBorderCountryWrapper","StyledTitle","CountryDetails","src","flags","png","alt","population","region","subregion","capital","tld","currencies","languages","borders","DetailsView","useParams","history","useHistory","URL","CountriesService","countries","countryName","result","searchTerm","toLowerCase","filter","includes","defaultSearchValues","StyledItemWrapper","StyleItemImg","StyledItemContent","StyledItemTitle","StyledItemField","StyledItemFieldName","CountryItem","StyledTooltipList","ul","isOpen","StyledTooltipItem","li","regions","Tooltip","currentRegion","handleFilterChange","toggleTooltipOpen","setCurrentRegion","handleChangeRegion","StyledFilterByWrapper","StyledFilterByBtn","StyledBtnText","FilterBy","setIsOpen","prev","btnIcon","StyledSearchInputWrapper","StyledFilterBtn","StyledFilterInput","SearchInput","handleInputChange","handleResetInput","setValue","searchIcon","aria-label","type","onChange","e","target","placeholder","StyledFilterWrapper","Filter","PaginationWrapper","PaginationPagesDisplay","PaginationPageItemDisplay","PaginationTooltipWrapper","PaginationControlBtn","PaginationControlBtnText","PaginationTooltip","PaginationTooltipItem","paginationTooltipOptions","PaginationControl","currentPage","handleItemsPerPage","handleNextPage","handlePrevPage","itemsPerPage","pages","arial-label","option","StyledCountriesDisplayWrapper","HomeView","delay","searchValues","setSearchValues","filteredCountries","setFilteredCountries","timeoutId","setTimeout","filterResult","getCountriesByFilter","clearTimeout","useSearch","countriesLength","setItemsPerPage","setCurrentPage","Math","ceil","setPages","numOfItemsPerPage","usePagination","slice","StyledNav","nav","StyledNavTitle","h1","StyledToggleThemeBtn","Nav","toggleTheme","themeIcon","LIGHT","themeText","DARK","StyledPageNotFoundTitle","h2","StyledPageNotFoundDescription","StyledPageNotFoundImg","PageNotFoundView","PirateFlag","GlobalStyles","createGlobalStyle","App","setTheme","setUserTheme","localStorage","setItem","userTheme","getItem","useToggleTheme","basename","process","exact","path","render","component","ReactDOM","StrictMode","document","getElementById","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.3f66982c.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { useEffect, useState } from 'react';\r\n\r\nexport type UpdateType = () => void;\r\n\r\nexport enum THEME {\r\n\tLIGHT = 'light',\r\n\tDARK = 'dark',\r\n}\r\n\r\nexport const useToggleTheme = (): [string, UpdateType] => {\r\n\tconst [theme, setTheme] = useState<string>(THEME.LIGHT);\r\n\r\n\tconst setUserTheme = (theme: string): void => {\r\n\t\twindow.localStorage.setItem('theme', theme);\r\n\t\tsetTheme(theme);\r\n\t};\r\n\r\n\tconst toggleTheme: UpdateType = () => {\r\n\t\tif (theme === THEME.LIGHT) {\r\n\t\t\tsetUserTheme(THEME.DARK);\r\n\t\t} else {\r\n\t\t\tsetUserTheme(THEME.LIGHT);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tconst userTheme: string = window.localStorage.getItem('theme') || THEME.LIGHT;\r\n\r\n\t\tsetUserTheme(userTheme);\r\n\t}, []);\r\n\r\n\treturn [theme, toggleTheme];\r\n};\r\n","import axios from 'axios';\r\nimport { useEffect, useRef, useState } from 'react';\r\n\r\nexport interface ICurrencies {\r\n  [key: string]: ICurrency;\r\n}\r\nexport interface ICurrency {\r\n  name: string;\r\n  symbol: string;\r\n}\r\n\r\nexport interface ILanguage {\r\n  name: string;\r\n  nativeName: string;\r\n}\r\nexport interface ICountry {\r\n  name: {\r\n    common: string;\r\n  };\r\n  flags: {\r\n    png: string;\r\n    svg: string;\r\n  };\r\n  population: number;\r\n  region: string;\r\n  subregion: string;\r\n  capital: string;\r\n  nativName: string;\r\n  tld: string[];\r\n  currencies: ICurrencies;\r\n  languages: ILanguage[];\r\n  borders: string[];\r\n}\r\n\r\ninterface ICache<T> {\r\n  [url: string]: T;\r\n}\r\n\r\nexport type CountryData = ICountry[] | [];\r\n\r\nexport type FetchType = { data: CountryData; isLoading: boolean; error: string };\r\n\r\nexport const ALL_URL = 'https://restcountries.com/v3.1/all';\r\nexport const DETAILS_URL = 'https://restcountries.com/v3.1/name/';\r\n\r\nexport const useFetch = (url: string): FetchType => {\r\n  const [data, setData] = useState<CountryData>([]);\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n  const [error, setError] = useState<string>('');\r\n\r\n  const cache = useRef<ICache<CountryData>>({});\r\n  const cancel = useRef<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    if (!url) return;\r\n\r\n    const fetchData = async () => {\r\n      setIsLoading(true);\r\n\r\n      if (cache.current[url]) {\r\n        setIsLoading(false);\r\n        setData(cache.current[url]);\r\n        setError('');\r\n      } else {\r\n        try {\r\n          const { data } = await axios.get(url);\r\n\r\n          cache.current[url] = data;\r\n          if (cancel.current) return;\r\n          if (data) {\r\n            setIsLoading(false);\r\n            setData(data);\r\n            setError('');\r\n          }\r\n        } catch (e) {\r\n          if (cancel.current) return;\r\n\r\n          if (e instanceof Error) {\r\n            setError(e.message);\r\n          }\r\n\r\n          setError('Could not get data');\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [url]);\r\n\r\n  return { data, isLoading, error };\r\n};\r\n","import { DefaultTheme } from 'styled-components';\r\n\r\nconst defaultTheme = {\r\n\tboxShadow: '0 1px 3px 0 rgb(0 0 0 / 10%), 0 1px 2px 0 rgb(0 0 0 / 6%)',\r\n\tfontSize: {\r\n\t\ts: '14px',\r\n\t\tm: '18px',\r\n\t\tl: '26px',\r\n\t\txl: '32px',\r\n\t\txxl: '38px',\r\n\t\tsl: '44px',\r\n\t},\r\n\tfontWeight: {\r\n\t\tthin: 300,\r\n\t\tregular: 600,\r\n\t\tbold: 800,\r\n\t},\r\n\tdevices: {\r\n\t\tmobileM: `(min-width: 375px)`,\r\n\t\ttablet: `(min-width: 768px)`,\r\n\t\tlaptop: `(min-width: 1024px)`,\r\n\t\tdesktop: `(min-width: 1440px)`,\r\n\t},\r\n};\r\n\r\nexport const lightTheme: DefaultTheme = {\r\n\tcolor: {\r\n\t\ttext: 'hsl(200, 15%, 8%)',\r\n\t\tbackground: 'hsl(0, 0%, 98%)',\r\n\t\telements: 'hsl(0, 0%, 100%)',\r\n\t\tinput: 'hsl(0, 0%, 52%)',\r\n\t},\r\n\r\n\tboxShadow: defaultTheme.boxShadow,\r\n\tfontSize: defaultTheme.fontSize,\r\n\tfontWeight: defaultTheme.fontWeight,\r\n\tdevices: defaultTheme.devices,\r\n};\r\n\r\nexport const darkTheme: DefaultTheme = {\r\n\tcolor: {\r\n\t\ttext: 'hsl(0, 0%, 100%)',\r\n\t\tbackground: 'hsl(207, 26%, 17%)',\r\n\t\telements: 'hsl(209, 23%, 22%)',\r\n\t\tinput: 'hsl(0, 0%, 100%)',\r\n\t},\r\n\r\n\tboxShadow: defaultTheme.boxShadow,\r\n\tfontSize: defaultTheme.fontSize,\r\n\tfontWeight: defaultTheme.fontWeight,\r\n\tdevices: defaultTheme.devices,\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledWrapper = styled.main`\r\n\tpadding: 20px;\r\n\r\n\t@media ${({ theme }) => theme.devices.tablet} {\r\n\t\tpadding: 40px;\r\n\t}\r\n`;\r\n","import { FC } from 'react';\r\n\r\nimport { StyledWrapper } from './ContentWrapper.styles';\r\n\r\ninterface IProps {\r\n\tchildren: React.ReactNode;\r\n}\r\n\r\nconst ContentWrapper: FC<IProps> = ({ children }) => {\r\n\treturn <StyledWrapper>{children}</StyledWrapper>;\r\n};\r\n\r\nexport default ContentWrapper;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledButton = styled.button`\r\n\tmargin: 20px 0;\r\n\tpadding: 10px 20px;\r\n\tbackground-color: ${({ theme }) => theme.color.elements};\r\n\tborder: none;\r\n\tbox-shadow: ${({ theme }) => theme.boxShadow};\r\n\tcursor: pointer;\r\n\r\n\t& i {\r\n\t\tmargin-right: 10px;\r\n\t}\r\n`;\r\n","import { FC } from 'react';\r\n\r\nimport { StyledButton } from './Button.styles';\r\n\r\ninterface IProps {\r\n\thandleGoBack: () => void;\r\n\ttitle: string;\r\n}\r\n\r\nconst Button: FC<IProps> = ({ handleGoBack, title }) => {\r\n\treturn (\r\n\t\t<StyledButton onClick={handleGoBack}>\r\n\t\t\t<i className='fas fa-arrow-left'></i>\r\n\t\t\t{title}\r\n\t\t</StyledButton>\r\n\t);\r\n};\r\n\r\nexport default Button;\r\n","export const getPopulationNumberWithComas = (value: number = 0): string => {\r\n\tconst valueArr = value.toString().split('').reverse();\r\n\tconst lenght = valueArr.length;\r\n\r\n\tconst resultArr = [];\r\n\r\n\tfor (let i = 0; i <= lenght - 1; i++) {\r\n\t\tif (i % 3 === 0 && i) {\r\n\t\t\tresultArr.push(',');\r\n\t\t}\r\n\r\n\t\tresultArr.push(valueArr[i]);\r\n\t}\r\n\r\n\treturn resultArr.reverse().join('');\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledErrorFallbackWrapper = styled.div`\r\n\tpadding: 10px 20px;\r\n\tmargin: 10px;\r\n\tborder-radius: 4px;\r\n\ttext-align: center;\r\n\tbackground-color: ${({ theme }) => theme.color.elements};\r\n\tbox-shadow: ${({ theme }) => theme.boxShadow};\r\n`;\r\n\r\nexport const StyledErrorFallbackHighlight = styled.span`\r\n\tmargin-right: 5px;\r\n\tfont-weight: ${({ theme }) => theme.fontWeight.bold};\r\n`;\r\n","import { FC } from 'react';\r\n\r\nimport { StyledErrorFallbackWrapper, StyledErrorFallbackHighlight } from './ErrorFallback.styles';\r\n\r\ninterface IProps {\r\n\terrorMsg: string;\r\n}\r\n\r\nconst ErrorFallback: FC<IProps> = ({ errorMsg }) => {\r\n\treturn (\r\n\t\t<StyledErrorFallbackWrapper>\r\n\t\t\t<p>\r\n\t\t\t\t<StyledErrorFallbackHighlight>Ups an error occured: </StyledErrorFallbackHighlight>\r\n\t\t\t\t{errorMsg}\r\n\t\t\t</p>\r\n\t\t</StyledErrorFallbackWrapper>\r\n\t);\r\n};\r\n\r\nexport default ErrorFallback;\r\n","import styled from 'styled-components';\r\n\r\ninterface IProps {\r\n\tsize: number;\r\n}\r\n\r\nexport const StyledWrapper = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tmargin: 0 10px;\r\n`;\r\n\r\nexport const StyledSpinnerWrapper = styled.div<IProps>`\r\n\twidth: ${({ size }) => `${size}px`};\r\n\theight: ${({ size }) => `${size * 1.5}px`};\r\n\tmargin: 0 auto;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n`;\r\n\r\nexport const StyledSpinnerText = styled.p`\r\n\ttext-align: center;\r\n`;\r\n","import { FC } from 'react';\r\nimport { useTheme } from 'styled-components';\r\n\r\nimport { PuffLoader } from 'react-spinners';\r\n\r\nimport { StyledWrapper, StyledSpinnerWrapper, StyledSpinnerText } from './Spinner.styles';\r\n\r\ninterface IProps {\r\n\tisLoading: boolean;\r\n\tsize?: number;\r\n}\r\n\r\nconst Spinner: FC<IProps> = ({ isLoading, size = 160 }) => {\r\n\tconst theme = useTheme();\r\n\r\n\treturn (\r\n\t\t<StyledWrapper>\r\n\t\t\t<StyledSpinnerWrapper size={size}>\r\n\t\t\t\t<PuffLoader loading={isLoading} color={theme.color.text} size={size} />\r\n\t\t\t</StyledSpinnerWrapper>\r\n\t\t\t<StyledSpinnerText>Loading...</StyledSpinnerText>\r\n\t\t</StyledWrapper>\r\n\t);\r\n};\r\n\r\nexport default Spinner;\r\n","import { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledBorderCountry = styled(Link)`\r\n\tbackground-color: ${({ theme }) => theme.color.elements};\r\n\tpadding: 10px 20px;\r\n\tbox-shadow: ${({ theme }) => theme.boxShadow};\r\n\tmargin: 10px 5px;\r\n`;\r\n","import { FC, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport ErrorFallback from '../ErrorFallback/ErrorFallback';\r\nimport Spinner from '../Spinner/Spinner';\r\n\r\nimport { StyledBorderCountry } from './BorderCountryItem.styles';\r\n\r\ninterface IProps {\r\n  border: string;\r\n}\r\n\r\nconst BorderCountryItem: FC<IProps> = ({ border }) => {\r\n  const [borderCountry, setBorderCountry] = useState<string>('');\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n  const [error, setError] = useState<string>('');\r\n\r\n  const country = borderCountry ? borderCountry : 'No border country';\r\n\r\n  useEffect(() => {\r\n    const fetchBorderCountry = async () => {\r\n      setIsLoading(true);\r\n\r\n      try {\r\n        const { data } = await axios.get(`https://restcountries.com/v3.1/alpha/${border}`);\r\n\r\n        if (data) {\r\n          setBorderCountry(data[0].name.common);\r\n          setIsLoading(false);\r\n          setError('');\r\n        }\r\n      } catch (e) {\r\n        setIsLoading(false);\r\n        if (e instanceof Error) {\r\n          setError(e.message);\r\n        }\r\n        setError('Could not get data');\r\n      }\r\n    };\r\n\r\n    fetchBorderCountry();\r\n  }, [border]);\r\n\r\n  return (\r\n    <>\r\n      {error ? (\r\n        <ErrorFallback errorMsg={error} />\r\n      ) : isLoading ? (\r\n        <Spinner isLoading={isLoading} size={40} />\r\n      ) : (\r\n        <StyledBorderCountry to={borderCountry || '#'}>{country}</StyledBorderCountry>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BorderCountryItem;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledCountryField = styled.p`\r\n\tmargin-bottom: 15px;\r\n`;\r\n\r\nexport const StyledCountryFieldName = styled.span`\r\n\tfont-weight: ${({ theme }) => theme.fontWeight.bold};\r\n\tmargin-right: 5px;\r\n`;\r\n\r\nexport const StyledCountryFieldNameValue = styled.span`\r\n\tfont-weight: ${({ theme }) => theme.fontWeight.thin};\r\n\tmargin-right: 5px;\r\n\r\n\t&::after {\r\n\t\tcontent: ',';\r\n\t}\r\n\r\n\t&:last-child::after {\r\n\t\tcontent: '';\r\n\t}\r\n`;\r\n","import { FC } from 'react';\r\n\r\nimport { ICurrencies, ILanguage } from '../../hooks/useFetch';\r\n\r\nimport {\r\n  StyledCountryField,\r\n  StyledCountryFieldName,\r\n  StyledCountryFieldNameValue,\r\n} from './CountryDetailsField.styles';\r\n\r\ninterface IProps {\r\n  fieldName: string;\r\n  fieldValue: string | string[] | ILanguage[] | ICurrencies;\r\n}\r\n\r\nconst CountryDetailsField: FC<IProps> = ({ fieldName, fieldValue }) => {\r\n  const displayedValue = () => {\r\n    if (typeof fieldValue === 'string') {\r\n      return fieldValue;\r\n    }\r\n\r\n    if (Array.isArray(fieldValue)) {\r\n      return fieldValue.map((value) => (\r\n        <StyledCountryFieldNameValue key={typeof value === 'string' ? value : value.name}>\r\n          {typeof value === 'string' ? value : value.name}\r\n        </StyledCountryFieldNameValue>\r\n      ));\r\n    }\r\n\r\n    if (typeof fieldValue === 'object' && !Array.isArray(fieldValue) && fieldValue !== null) {\r\n      return Object.keys(fieldValue).map((value) => (\r\n        <StyledCountryFieldNameValue key={value}>{value}</StyledCountryFieldNameValue>\r\n      ));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StyledCountryField>\r\n      <StyledCountryFieldName>{fieldName} </StyledCountryFieldName>\r\n      {displayedValue()}\r\n    </StyledCountryField>\r\n  );\r\n};\r\n\r\nexport default CountryDetailsField;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledDetailsWrapper = styled.div`\r\n\tpadding: 30px 0;\r\n\r\n\t@media ${({ theme }) => theme.devices.tablet} {\r\n\t\tdisplay: flex;\r\n\t\tpadding: 60px 0;\r\n\t}\r\n`;\r\n\r\nexport const StyledImgWrapper = styled.div`\r\n\tmargin: 0 auto;\r\n\twidth: 300px;\r\n\r\n\t@media ${({ theme }) => theme.devices.tablet} {\r\n\t\tflex-basis: 40%;\r\n\t\talign-self: center;\r\n\t}\r\n`;\r\n\r\nexport const StyledImg = styled.img`\r\n\twidth: 100%;\r\n`;\r\n\r\nexport const StyledCountryDetails = styled.div`\r\n\tmargin-top: 40px;\r\n\r\n\t@media ${({ theme }) => theme.devices.tablet} {\r\n\t\tflex-basis: 60%;\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t\tflex-wrap: wrap;\r\n\t\tmargin-top: 0;\r\n\t\tmargin-left: 100px;\r\n\t}\r\n`;\r\n\r\nexport const StyledCountryDetailsSection = styled.div`\r\n\tmargin-bottom: 40px;\r\n\r\n\t@media ${({ theme }) => theme.devices.tablet} {\r\n\t\tflex-basis: 50%;\r\n\t}\r\n`;\r\n\r\nexport const StyledCountryName = styled.p`\r\n\tfont-size: ${({ theme }) => theme.fontSize.m};\r\n\tfont-weight: ${({ theme }) => theme.fontWeight.bold};\r\n\tmargin-bottom: 30px;\r\n\r\n\t@media ${({ theme }) => theme.devices.tablet} {\r\n\t\tflex-basis: 100%;\r\n\t\tfont-size: ${({ theme }) => theme.fontSize.l};\r\n\t}\r\n`;\r\n\r\nexport const StyledBorderCountryWrapper = styled.div`\r\n\tdisplay: flex;\r\n\tflex-wrap: wrap;\r\n`;\r\n\r\nexport const StyledTitle = styled.p`\r\n\tfont-size: ${({ theme }) => theme.fontSize.m};\r\n\tfont-weight: ${({ theme }) => theme.fontWeight.regular};\r\n\tmargin-bottom: 10px;\r\n`;\r\n","import { FC } from 'react';\r\n\r\nimport { getPopulationNumberWithComas } from '../../utils/getPopulationNumberWithComas';\r\nimport { ICountry } from '../../hooks/useFetch';\r\n\r\nimport BorderCountryItem from '../BorderCountryItem/BorderCountryItem';\r\nimport CountryDetailsField from '../CountryDetailsField/CountryDetailsField';\r\n\r\nimport {\r\n  StyledBorderCountryWrapper,\r\n  StyledDetailsWrapper,\r\n  StyledImgWrapper,\r\n  StyledImg,\r\n  StyledCountryDetails,\r\n  StyledCountryDetailsSection,\r\n  StyledCountryName,\r\n  StyledTitle,\r\n} from './CountryDetails.styles';\r\n\r\nimport { StyledBorderCountry } from '../BorderCountryItem/BorderCountryItem.styles';\r\n\r\ninterface IProps {\r\n  country: ICountry;\r\n}\r\n\r\nconst CountryDetails: FC<IProps> = ({ country }) => {\r\n  return (\r\n    <StyledDetailsWrapper>\r\n      <StyledImgWrapper>\r\n        <StyledImg src={country?.flags.png} alt={`${country.name.common} flag`} />\r\n      </StyledImgWrapper>\r\n      <StyledCountryDetails>\r\n        <StyledCountryName>{country.name.common}</StyledCountryName>\r\n        <StyledCountryDetailsSection>\r\n          <CountryDetailsField fieldName='Native name:' fieldValue={country.name.common} />\r\n          <CountryDetailsField\r\n            fieldName='Population:'\r\n            fieldValue={getPopulationNumberWithComas(country.population)}\r\n          />\r\n          <CountryDetailsField fieldName='Region:' fieldValue={country.region} />\r\n          <CountryDetailsField fieldName='Sub Region:' fieldValue={country.subregion} />\r\n          <CountryDetailsField fieldName='Capital:' fieldValue={country.capital} />\r\n        </StyledCountryDetailsSection>\r\n        <StyledCountryDetailsSection>\r\n          <CountryDetailsField fieldName='Top Level Domain:' fieldValue={country.tld} />\r\n          <CountryDetailsField fieldName='Currencies:' fieldValue={country.currencies} />\r\n          <CountryDetailsField fieldName='Languages:' fieldValue={country.languages} />\r\n        </StyledCountryDetailsSection>\r\n        <div>\r\n          <StyledTitle>Border Countries:</StyledTitle>\r\n          <StyledBorderCountryWrapper>\r\n            {country.borders.length ? (\r\n              <>\r\n                {country.borders.map((border) => (\r\n                  <BorderCountryItem key={border} border={border} />\r\n                ))}\r\n              </>\r\n            ) : (\r\n              <StyledBorderCountry to='#'>No border countries</StyledBorderCountry>\r\n            )}\r\n          </StyledBorderCountryWrapper>\r\n        </div>\r\n      </StyledCountryDetails>\r\n    </StyledDetailsWrapper>\r\n  );\r\n};\r\n\r\nexport default CountryDetails;\r\n","import { FC } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\nimport { DETAILS_URL, useFetch } from '../../hooks/useFetch';\r\n\r\nimport Button from '../../components/Button/Button';\r\nimport CountryDetails from '../../components/CountryDetails/CountryDetails';\r\nimport ErrorFallback from '../../components/ErrorFallback/ErrorFallback';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\n\r\ninterface IParams {\r\n\tname: string;\r\n}\r\n\r\nconst DetailsView: FC = () => {\r\n\tconst { name } = useParams<IParams>();\r\n\r\n\tconst history = useHistory();\r\n\r\n\tconst URL = `${DETAILS_URL}${name}`;\r\n\r\n\tconst {\r\n\t\tdata: [country],\r\n\t\tisLoading,\r\n\t\terror,\r\n\t} = useFetch(URL);\r\n\r\n\tconst handleGoBack = (): void => history.push('/');\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Button handleGoBack={handleGoBack} title='Back' />\r\n\t\t\t{error ? (\r\n\t\t\t\t<ErrorFallback errorMsg={error} />\r\n\t\t\t) : isLoading ? (\r\n\t\t\t\t<Spinner isLoading={isLoading} />\r\n\t\t\t) : (\r\n\t\t\t\tcountry && <CountryDetails country={country} />\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default DetailsView;\r\n","import { CountryData, ICountry } from '../hooks/useFetch';\r\n\r\nexport default class CountriesService {\r\n  static getCountriesByFilter(\r\n    countries: CountryData,\r\n    { region, countryName }: { region: string; countryName: string }\r\n  ) {\r\n    let result = countries;\r\n\r\n    if (countryName && countryName.length) {\r\n      const searchTerm = countryName.toLowerCase();\r\n\r\n      result = result.filter((country: ICountry) =>\r\n        country.name.common.toLowerCase().includes(searchTerm)\r\n      );\r\n    }\r\n\r\n    if (region) {\r\n      result = result.filter((country: ICountry) =>\r\n        country.region.toLowerCase().includes(region.toLowerCase())\r\n      );\r\n    }\r\n\r\n    return result;\r\n  }\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport { CountryData } from './useFetch';\r\n\r\nimport CountriesService from '../services/CountriesService';\r\n\r\ninterface ISearchValues {\r\n\tcountryName: string;\r\n\tregion: string;\r\n}\r\n\r\nexport type UpdateInput = (e: React.ChangeEvent<HTMLInputElement>) => void;\r\nexport type UpdateFilter = (region: string) => void;\r\n\r\nconst defaultSearchValues: ISearchValues = { countryName: '', region: '' };\r\n\r\nexport const useSearch = (data: CountryData, delay: number = 500) => {\r\n\tconst [searchValues, setSearchValues] = useState<ISearchValues>(defaultSearchValues);\r\n\tconst [filteredCountries, setFilteredCountries] = useState<CountryData>([]);\r\n\r\n\tconst handleInputChange: UpdateInput = (e) => {\r\n\t\tconst { value } = e.target;\r\n\r\n\t\tsetSearchValues((prev) => ({ ...prev, countryName: value }));\r\n\t};\r\n\r\n\tconst handleFilterChange: UpdateFilter = (region) => {\r\n\t\tsetSearchValues((prev) => ({ ...prev, region }));\r\n\t};\r\n\r\n\tconst handleResetInput = () => {\r\n\t\tsetSearchValues((prev) => ({ ...prev, countryName: '' }));\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tconst timeoutId = setTimeout(() => {\r\n\t\t\tconst filterResult = CountriesService.getCountriesByFilter(data, searchValues);\r\n\r\n\t\t\tsetFilteredCountries(filterResult);\r\n\t\t}, delay);\r\n\r\n\t\treturn () => clearTimeout(timeoutId);\r\n\t}, [data, searchValues, delay]);\r\n\r\n\treturn { filteredCountries, handleInputChange, handleFilterChange, handleResetInput };\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledItemWrapper = styled.div`\r\n\tborder-radius: 4px;\r\n\twidth: 90%;\r\n\tmin-width: 300px;\r\n\tmax-width: 300px;\r\n\tmargin: 0 20px 40px 20px;\r\n\tbackground-color: ${({ theme }) => theme.color.elements};\r\n`;\r\n\r\nexport const StyleItemImg = styled.img`\r\n\twidth: 300px;\r\n\theight: 200px;\r\n\tborder-radius: 4px 4px 0 0;\r\n`;\r\n\r\nexport const StyledItemContent = styled.div`\r\n\tpadding: 30px 20px 40px 20px;\r\n\tbox-shadow: ${({ theme }) => theme.boxShadow};\r\n`;\r\n\r\nexport const StyledItemTitle = styled.p`\r\n\tdisplay: block;\r\n\tmargin-bottom: 20px;\r\n\tfont-size: ${({ theme }) => theme.fontSize.m};\r\n\tfont-weight: ${({ theme }) => theme.fontWeight.bold};\r\n`;\r\n\r\nexport const StyledItemField = styled.p`\r\n\tmargin-bottom: 5px;\r\n`;\r\n\r\nexport const StyledItemFieldName = styled.span`\r\n\tfont-weight: ${({ theme }) => theme.fontWeight.regular};\r\n`;\r\n","import { FC } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { getPopulationNumberWithComas } from '../../utils/getPopulationNumberWithComas';\r\nimport { ICountry } from '../../hooks/useFetch';\r\n\r\nimport {\r\n  StyledItemWrapper,\r\n  StyledItemContent,\r\n  StyleItemImg,\r\n  StyledItemField,\r\n  StyledItemFieldName,\r\n  StyledItemTitle,\r\n} from './CountryItem.styles';\r\ninterface IProps {\r\n  country: ICountry;\r\n}\r\n\r\nconst CountryItem: FC<IProps> = ({ country }) => {\r\n  return (\r\n    <Link to={`details/${country.name.common.toLowerCase()}`}>\r\n      <StyledItemWrapper>\r\n        <StyleItemImg src={country.flags.png} alt='' />\r\n        <StyledItemContent>\r\n          <StyledItemTitle>{country.name.common}</StyledItemTitle>\r\n          <StyledItemField>\r\n            <StyledItemFieldName>Population: </StyledItemFieldName>\r\n            {getPopulationNumberWithComas(country.population)}\r\n          </StyledItemField>\r\n          <StyledItemField>\r\n            <StyledItemFieldName>Region: </StyledItemFieldName>\r\n            {country.region}\r\n          </StyledItemField>\r\n          <StyledItemField>\r\n            <StyledItemFieldName>Capital: </StyledItemFieldName>\r\n            {country.capital}\r\n          </StyledItemField>\r\n        </StyledItemContent>\r\n      </StyledItemWrapper>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default CountryItem;\r\n","import styled from 'styled-components';\r\n\r\ninterface IProps {\r\n\tisOpen: boolean;\r\n}\r\n\r\nexport const StyledTooltipList = styled.ul<IProps>`\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\tright: 0;\r\n\ttop: 110%;\r\n\topacity: ${({ isOpen }) => (isOpen ? 1 : 0)};\r\n\tvisibility: ${({ isOpen }) => (isOpen ? 'visible' : 'hidden')};\r\n\tlist-style-type: none;\r\n\tbackground-color: ${({ theme }) => theme.color.elements};\r\n\tborder-radius: 4px;\r\n\tbox-shadow: ${({ theme }) => theme.boxShadow};\r\n\ttransition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out;\r\n\tz-index: 500;\r\n`;\r\n\r\nexport const StyledTooltipItem = styled.li`\r\n\tpadding: 15px 20px;\r\n\tcursor: pointer;\r\n`;\r\n","import { Dispatch, FC, SetStateAction } from 'react';\r\n\r\nimport { UpdateFilter } from '../../hooks/useSearch';\r\n\r\nimport { StyledTooltipList, StyledTooltipItem } from './Tooltip.styles';\r\n\r\ninterface IProps {\r\n\tisOpen: boolean;\r\n\tcurrentRegion: string;\r\n\thandleFilterChange: UpdateFilter;\r\n\ttoggleTooltipOpen: () => void;\r\n\tsetCurrentRegion: Dispatch<SetStateAction<string>>;\r\n}\r\n\r\nconst regions = ['Africa', 'America', 'Asia', 'Europe', 'Oceania'];\r\n\r\nconst Tooltip: FC<IProps> = ({\r\n\tcurrentRegion,\r\n\tisOpen,\r\n\thandleFilterChange,\r\n\ttoggleTooltipOpen,\r\n\tsetCurrentRegion,\r\n}) => {\r\n\tconst handleChangeRegion = (region?: string): void => {\r\n\t\tif (region) {\r\n\t\t\thandleFilterChange(region);\r\n\t\t\tsetCurrentRegion(region);\r\n\t\t} else {\r\n\t\t\thandleFilterChange('');\r\n\t\t\tsetCurrentRegion('');\r\n\t\t}\r\n\r\n\t\ttoggleTooltipOpen();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<StyledTooltipList isOpen={isOpen}>\r\n\t\t\t{regions.map((region) => {\r\n\t\t\t\tif (region === currentRegion) return null;\r\n\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<StyledTooltipItem key={region} onClick={() => handleChangeRegion(region)}>\r\n\t\t\t\t\t\t{region}\r\n\t\t\t\t\t</StyledTooltipItem>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t\t{currentRegion && (\r\n\t\t\t\t<StyledTooltipItem onClick={() => handleChangeRegion()}>Reset Filter</StyledTooltipItem>\r\n\t\t\t)}\r\n\t\t</StyledTooltipList>\r\n\t);\r\n};\r\n\r\nexport default Tooltip;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledFilterByWrapper = styled.div`\r\n\tposition: relative;\r\n\tbox-shadow: ${({ theme }) => theme.boxShadow};\r\n\tmargin-bottom: 30px;\r\n\tmin-width: 190px;\r\n`;\r\n\r\nexport const StyledFilterByBtn = styled.button`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: space-between;\r\n\tborder: none;\r\n\theight: 100%;\r\n\twidth: 100%;\r\n\tborder-radius: 4px;\r\n\tpadding: 15px 20px;\r\n\tbackground-color: ${({ theme }) => theme.color.elements};\r\n\toutline: none;\r\n\tcursor: pointer;\r\n`;\r\n\r\nexport const StyledBtnText = styled.span`\r\n\tmargin-right: 50px;\r\n`;\r\n","import { FC, useState } from 'react';\r\n\r\nimport { UpdateFilter } from '../../hooks/useSearch';\r\n\r\nimport Tooltip from '../Tooltip/Tooltip';\r\n\r\nimport { StyledFilterByWrapper, StyledFilterByBtn, StyledBtnText } from './FilterBy.styles';\r\n\r\ninterface IProps {\r\n\thandleFilterChange: UpdateFilter;\r\n}\r\n\r\nconst FilterBy: FC<IProps> = ({ handleFilterChange }) => {\r\n\tconst [isOpen, setIsOpen] = useState<boolean>(false);\r\n\tconst [currentRegion, setCurrentRegion] = useState<string>('');\r\n\r\n\tconst toggleTooltipOpen = (): void => {\r\n\t\tsetIsOpen((prev) => !prev);\r\n\t};\r\n\r\n\tconst btnIcon = isOpen ? (\r\n\t\t<i className='fas fa-angle-up'></i>\r\n\t) : (\r\n\t\t<i className='fas fa-angle-down'></i>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<StyledFilterByWrapper>\r\n\t\t\t<StyledFilterByBtn onClick={toggleTooltipOpen}>\r\n\t\t\t\t<StyledBtnText>{currentRegion || 'Filter by Region'}</StyledBtnText>\r\n\t\t\t\t{btnIcon}\r\n\t\t\t</StyledFilterByBtn>\r\n\t\t\t<Tooltip\r\n\t\t\t\tisOpen={isOpen}\r\n\t\t\t\thandleFilterChange={handleFilterChange}\r\n\t\t\t\ttoggleTooltipOpen={toggleTooltipOpen}\r\n\t\t\t\tcurrentRegion={currentRegion}\r\n\t\t\t\tsetCurrentRegion={setCurrentRegion}\r\n\t\t\t/>\r\n\t\t</StyledFilterByWrapper>\r\n\t);\r\n};\r\n\r\nexport default FilterBy;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledSearchInputWrapper = styled.div`\r\n\tdisplay: flex;\r\n\tpadding: 10px;\r\n\tbox-shadow: ${({ theme }) => theme.boxShadow};\r\n\tflex-basis: 100%;\r\n\tcolor: ${({ theme }) => theme.color.input};\r\n\tbackground-color: ${({ theme }) => theme.color.elements};\r\n\tborder-radius: 4px;\r\n\tmargin-bottom: 30px;\r\n\r\n\t@media (min-width: 600px) {\r\n\t\tflex-basis: 40%;\r\n\t}\r\n`;\r\n\r\nexport const StyledFilterBtn = styled.button`\r\n\tfont-size: ${({ theme }) => theme.fontSize.m};\r\n\tbackground-color: transparent;\r\n\tmargin: 0 20px;\r\n\tborder: none;\r\n\toutline: none;\r\n\tcursor: pointer;\r\n`;\r\n\r\nexport const StyledFilterInput = styled.input`\r\n\tbackground-color: transparent;\r\n\tpadding: 10px;\r\n\tflex-grow: 1;\r\n\tborder: none;\r\n\toutline: none;\r\n`;\r\n","import { FC, useState } from 'react';\r\n\r\nimport { UpdateInput } from '../../hooks/useSearch';\r\n\r\nimport { StyledFilterBtn, StyledFilterInput, StyledSearchInputWrapper } from './SearchInput.styles';\r\n\r\ninterface IProps {\r\n\thandleInputChange: UpdateInput;\r\n\thandleResetInput: () => void;\r\n}\r\n\r\nconst SearchInput: FC<IProps> = ({ handleInputChange, handleResetInput }) => {\r\n\tconst [value, setValue] = useState<string>('');\r\n\r\n\tconst searchIcon = value ? <i className='fas fa-times'></i> : <i className='fas fa-search'></i>;\r\n\r\n\tconst handleReset = () => {\r\n\t\tif (value) {\r\n\t\t\thandleResetInput();\r\n\t\t\tsetValue('');\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<StyledSearchInputWrapper>\r\n\t\t\t<StyledFilterBtn onClick={handleReset} aria-label='Search button'>\r\n\t\t\t\t{searchIcon}\r\n\t\t\t</StyledFilterBtn>\r\n\t\t\t<StyledFilterInput\r\n\t\t\t\ttype='text'\r\n\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\tconst { value } = e.target;\r\n\r\n\t\t\t\t\tsetValue(value);\r\n\t\t\t\t\thandleInputChange(e);\r\n\t\t\t\t}}\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tplaceholder='Search for a country...'\r\n\t\t\t/>\r\n\t\t</StyledSearchInputWrapper>\r\n\t);\r\n};\r\n\r\nexport default SearchInput;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledFilterWrapper = styled.div`\r\n\tdisplay: flex;\r\n\tflex-wrap: wrap;\r\n\r\n\t@media (min-width: 600px) {\r\n\t\tjustify-content: space-between;\r\n\t}\r\n`;\r\n","import { FC } from 'react';\r\n\r\nimport { UpdateFilter, UpdateInput } from '../../hooks/useSearch';\r\n\r\nimport FilterBy from '../FilterBy/FilterBy';\r\nimport SearchInput from '../SearchInput/SearchInput';\r\n\r\nimport { StyledFilterWrapper } from './Filter.styles';\r\n\r\ninterface IProps {\r\n\thandleInputChange: UpdateInput;\r\n\thandleFilterChange: UpdateFilter;\r\n\thandleResetInput: () => void;\r\n}\r\n\r\nconst Filter: FC<IProps> = ({ handleInputChange, handleFilterChange, handleResetInput }) => {\r\n\treturn (\r\n\t\t<StyledFilterWrapper>\r\n\t\t\t<SearchInput handleInputChange={handleInputChange} handleResetInput={handleResetInput} />\r\n\t\t\t<FilterBy handleFilterChange={handleFilterChange} />\r\n\t\t</StyledFilterWrapper>\r\n\t);\r\n};\r\n\r\nexport default Filter;\r\n","import styled from 'styled-components';\r\n\r\ninterface IProps {\r\n\tisOpen: boolean;\r\n}\r\n\r\nexport const PaginationWrapper = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\tmargin-bottom: 30px;\r\n\tmargin-left: auto;\r\n\tmax-width: 400px;\r\n`;\r\n\r\nexport const PaginationPagesDisplay = styled.div`\r\n\tdisplay: flex;\r\n`;\r\n\r\nexport const PaginationPageItemDisplay = styled.p`\r\n\tpadding: 10px 10px;\r\n\tmargin-right: 5px;\r\n\tbackground-color: ${({ theme }) => theme.color.elements};\r\n\tborder-radius: 4px;\r\n\tbox-shadow: ${({ theme }) => theme.boxShadow};\r\n`;\r\n\r\nexport const PaginationTooltipWrapper = styled.div`\r\n\tposition: relative;\r\n`;\r\n\r\nexport const PaginationControlBtn = styled.button`\r\n\tpadding: 10px 15px;\r\n\tmargin-right: 5px;\r\n\tbackground-color: ${({ theme }) => theme.color.elements};\r\n\tborder: none;\r\n\tborder-radius: 4px;\r\n\toutline: none;\r\n\tcursor: pointer;\r\n\tbox-shadow: ${({ theme }) => theme.boxShadow};\r\n`;\r\n\r\nexport const PaginationControlBtnText = styled.span`\r\n\tmargin-right: 20px;\r\n`;\r\n\r\nexport const PaginationTooltip = styled.ul<IProps>`\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\tright: 0;\r\n\ttop: 110%;\r\n\tlist-style-type: none;\r\n\tbackground-color: ${({ theme }) => theme.color.elements};\r\n\topacity: ${({ isOpen }) => (isOpen ? 1 : 0)};\r\n\tvisibility: ${({ isOpen }) => (isOpen ? 'visible' : 'hidden')};\r\n\ttransition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out;\r\n\tbox-shadow: ${({ theme }) => theme.boxShadow};\r\n\tz-index: 400;\r\n`;\r\n\r\nexport const PaginationTooltipItem = styled.li`\r\n\tpadding: 10px 15px;\r\n\tcursor: pointer;\r\n`;\r\n","import { FC, useState } from 'react';\r\n\r\nimport { UpdatePaginationType } from '../../hooks/usePagination';\r\n\r\nimport {\r\n\tPaginationWrapper,\r\n\tPaginationPagesDisplay,\r\n\tPaginationPageItemDisplay,\r\n\tPaginationTooltipWrapper,\r\n\tPaginationControlBtn,\r\n\tPaginationControlBtnText,\r\n\tPaginationTooltip,\r\n\tPaginationTooltipItem,\r\n} from './PaginationControl.styles';\r\n\r\ninterface IProps {\r\n\tcurrentPage: number;\r\n\titemsPerPage: number;\r\n\tpages: number;\r\n\thandleNextPage: () => void;\r\n\thandlePrevPage: () => void;\r\n\thandleItemsPerPage: UpdatePaginationType;\r\n}\r\n\r\nconst paginationTooltipOptions = [10, 20, 30, 50];\r\n\r\nconst PaginationControl: FC<IProps> = ({\r\n\tcurrentPage,\r\n\thandleItemsPerPage,\r\n\thandleNextPage,\r\n\thandlePrevPage,\r\n\titemsPerPage,\r\n\tpages,\r\n}) => {\r\n\tconst [isOpen, setIsOpen] = useState<boolean>(false);\r\n\r\n\tconst handleChangeItemsPerPage: UpdatePaginationType = (numOfItemsPerPage) => {\r\n\t\thandleItemsPerPage(numOfItemsPerPage);\r\n\t\tsetIsOpen(!isOpen);\r\n\t};\r\n\r\n\tconst btnIcon = isOpen ? (\r\n\t\t<i className='fas fa-angle-up'></i>\r\n\t) : (\r\n\t\t<i className='fas fa-angle-down'></i>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<PaginationWrapper>\r\n\t\t\t<PaginationPagesDisplay>\r\n\t\t\t\t<PaginationControlBtn onClick={handlePrevPage} arial-label='Previous countries'>\r\n\t\t\t\t\t<i className='fas fa-angle-left'></i>\r\n\t\t\t\t</PaginationControlBtn>\r\n\t\t\t\t<PaginationPageItemDisplay>{currentPage > 1 ? '1' : currentPage}</PaginationPageItemDisplay>\r\n\t\t\t\t{currentPage > 1 && currentPage < pages ? (\r\n\t\t\t\t\t<PaginationPageItemDisplay>...{currentPage}...</PaginationPageItemDisplay>\r\n\t\t\t\t) : null}\r\n\t\t\t\t<PaginationPageItemDisplay>{pages}</PaginationPageItemDisplay>\r\n\t\t\t\t<PaginationControlBtn onClick={handleNextPage} arial-label='Next countries'>\r\n\t\t\t\t\t<i className='fas fa-angle-right'></i>\r\n\t\t\t\t</PaginationControlBtn>\r\n\t\t\t</PaginationPagesDisplay>\r\n\t\t\t<PaginationTooltipWrapper>\r\n\t\t\t\t<PaginationControlBtn onClick={() => setIsOpen(!isOpen)}>\r\n\t\t\t\t\t<PaginationControlBtnText>{itemsPerPage}</PaginationControlBtnText>\r\n\t\t\t\t\t{btnIcon}\r\n\t\t\t\t</PaginationControlBtn>\r\n\t\t\t\t<PaginationTooltip isOpen={isOpen}>\r\n\t\t\t\t\t{paginationTooltipOptions.map((option) => (\r\n\t\t\t\t\t\t<PaginationTooltipItem key={option} onClick={() => handleChangeItemsPerPage(option)}>\r\n\t\t\t\t\t\t\t{option}\r\n\t\t\t\t\t\t</PaginationTooltipItem>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</PaginationTooltip>\r\n\t\t\t</PaginationTooltipWrapper>\r\n\t\t</PaginationWrapper>\r\n\t);\r\n};\r\n\r\nexport default PaginationControl;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledCountriesDisplayWrapper = styled.div`\r\n\tdisplay: flex;\r\n\tflex-wrap: wrap;\r\n\tjustify-content: space-around;\r\n`;\r\n","import { FC } from 'react';\r\n\r\nimport { useSearch } from '../../hooks/useSearch';\r\nimport { FetchType, ICountry } from '../../hooks/useFetch';\r\nimport { usePagination } from '../../hooks/usePagination';\r\n\r\nimport CountryItem from '../../components/CountryItem/CountryItem';\r\nimport ErrorFallback from '../../components/ErrorFallback/ErrorFallback';\r\nimport Filter from '../../components/Filter/Filter';\r\nimport PaginationControl from '../../components/PaginationControl/PaginationControl';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\n\r\nimport { StyledCountriesDisplayWrapper } from './HomeView.styles';\r\n\r\nconst HomeView: FC<FetchType> = ({ data, isLoading, error }) => {\r\n  const { filteredCountries, handleInputChange, handleFilterChange, handleResetInput } = useSearch(\r\n    data,\r\n    300\r\n  );\r\n\r\n  const { itemsPerPage, currentPage, pages, handleNextPage, handlePrevPage, handleItemsPerPage } =\r\n    usePagination(filteredCountries.length);\r\n\r\n  return (\r\n    <>\r\n      <Filter\r\n        handleInputChange={handleInputChange}\r\n        handleFilterChange={handleFilterChange}\r\n        handleResetInput={handleResetInput}\r\n      />\r\n\r\n      <PaginationControl\r\n        currentPage={currentPage}\r\n        handleItemsPerPage={handleItemsPerPage}\r\n        handleNextPage={handleNextPage}\r\n        handlePrevPage={handlePrevPage}\r\n        itemsPerPage={itemsPerPage}\r\n        pages={pages}\r\n      />\r\n\r\n      {error ? (\r\n        <ErrorFallback errorMsg={error} />\r\n      ) : isLoading ? (\r\n        <Spinner isLoading={isLoading} />\r\n      ) : (\r\n        <StyledCountriesDisplayWrapper>\r\n          {filteredCountries\r\n            .slice((currentPage - 1) * itemsPerPage, itemsPerPage * currentPage)\r\n            .map((country: ICountry) => (\r\n              <CountryItem country={country} key={country.name.common} />\r\n            ))}\r\n        </StyledCountriesDisplayWrapper>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeView;\r\n","import { useEffect, useState } from 'react';\r\n\r\nexport type UpdatePaginationType = (numOfItemsPerPage: number) => void;\r\n\r\nexport const usePagination = (countriesLength: number) => {\r\n\tconst [itemsPerPage, setItemsPerPage] = useState<number>(10);\r\n\tconst [currentPage, setCurrentPage] = useState<number>(1);\r\n\tconst [pages, setPages] = useState<number>(Math.ceil(countriesLength / itemsPerPage));\r\n\r\n\tconst handleNextPage = () => {\r\n\t\tif (currentPage + 1 > pages) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsetCurrentPage(currentPage + 1);\r\n\t};\r\n\r\n\tconst handlePrevPage = () => {\r\n\t\tif (currentPage - 1 < 1) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsetCurrentPage(currentPage - 1);\r\n\t};\r\n\r\n\tconst handleItemsPerPage: UpdatePaginationType = (numOfItemsPerPage) => {\r\n\t\tif (numOfItemsPerPage === itemsPerPage) return;\r\n\t\tsetItemsPerPage(numOfItemsPerPage);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (countriesLength) {\r\n\t\t\tsetPages(Math.ceil(countriesLength / itemsPerPage));\r\n\t\t\tsetCurrentPage(1);\r\n\t\t}\r\n\t}, [itemsPerPage, countriesLength]);\r\n\r\n\treturn { itemsPerPage, currentPage, pages, handleNextPage, handlePrevPage, handleItemsPerPage };\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledNav = styled.nav`\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\talign-items: center;\r\n\theight: 50px;\r\n\tpadding: 40px 20px;\r\n\tbox-shadow: ${({ theme }) => theme.boxShadow};\r\n\tbackground-color: ${({ theme }) => theme.color.elements};\r\n`;\r\n\r\nexport const StyledNavTitle = styled.h1`\r\n\tfont-size: ${({ theme }) => theme.fontSize.m};\r\n\tfont-weight: ${({ theme }) => theme.fontWeight.bold};\r\n`;\r\n\r\nexport const StyledToggleThemeBtn = styled.button`\r\n\tborder: none;\r\n\tbackground: transparent;\r\n\toutline: none;\r\n\ttext-transform: capitalize;\r\n\tfont-weight: ${({ theme }) => theme.fontWeight.regular};\r\n\tcursor: pointer;\r\n\r\n\t& .far {\r\n\t\tmargin-right: 10px;\r\n\t}\r\n`;\r\n","import { FC } from 'react';\r\n\r\nimport { THEME, UpdateType } from '../../hooks/useToggleTheme';\r\n\r\nimport { StyledNav, StyledNavTitle, StyledToggleThemeBtn } from './Nav.styles';\r\n\r\nexport interface IProps {\r\n\ttoggleTheme: UpdateType;\r\n\ttheme: string;\r\n}\r\n\r\nconst Nav: FC<IProps> = ({ theme, toggleTheme }) => {\r\n\tconst themeIcon =\r\n\t\ttheme === THEME.LIGHT ? <i className='far fa-moon'></i> : <i className='far fa-sun'></i>;\r\n\r\n\tconst themeText = `${theme === THEME.LIGHT ? THEME.DARK : THEME.LIGHT} mode`;\r\n\r\n\treturn (\r\n\t\t<StyledNav>\r\n\t\t\t<StyledNavTitle>Where in the world?</StyledNavTitle>\r\n\t\t\t<StyledToggleThemeBtn onClick={() => toggleTheme()}>\r\n\t\t\t\t{themeIcon}\r\n\t\t\t\t{themeText}\r\n\t\t\t</StyledToggleThemeBtn>\r\n\t\t</StyledNav>\r\n\t);\r\n};\r\n\r\nexport default Nav;\r\n","export default __webpack_public_path__ + \"static/media/pirate.91d3fd02.svg\";","import styled from 'styled-components';\r\n\r\nexport const StyledPageNotFoundTitle = styled.h2`\r\n\tmargin-bottom: 30px;\r\n\ttext-align: center;\r\n\tfont-size: ${({ theme }) => theme.fontSize.xl};\r\n`;\r\n\r\nexport const StyledPageNotFoundDescription = styled.p`\r\n\tmargin-top: 30px;\r\n\tmargin-bottom: 30px;\r\n\ttext-align: center;\r\n\tfont-size: ${({ theme }) => theme.fontSize.m};\r\n`;\r\n\r\nexport const StyledPageNotFoundImg = styled.img`\r\n\twidth: 100%;\r\n`;\r\n","import { FC } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport PirateFlag from '../../images/pirate.svg';\r\n\r\nimport Button from '../../components/Button/Button';\r\n\r\nimport {\r\n\tStyledPageNotFoundTitle,\r\n\tStyledPageNotFoundDescription,\r\n\tStyledPageNotFoundImg,\r\n} from './PageNotFound.styles';\r\n\r\nconst PageNotFoundView: FC = () => {\r\n\tconst history = useHistory();\r\n\r\n\tconst goBack = () => {\r\n\t\thistory.push('/');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<StyledPageNotFoundTitle>Arrr!</StyledPageNotFoundTitle>\r\n\t\t\t<StyledPageNotFoundImg src={PirateFlag} alt='pirate flag' />\r\n\t\t\t<StyledPageNotFoundDescription>\r\n\t\t\t\tLook's like page you're looking for doesn't exist!\r\n\t\t\t</StyledPageNotFoundDescription>\r\n\t\t\t<Button handleGoBack={goBack} title='Go back' />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default PageNotFoundView;\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n\r\n*, *::after, *::before {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\nbody{\r\n  font-family: 'Nunito Sans', sans-serif;\r\n  font-size: 14px;\r\n  background-color: ${({ theme }) => theme.color.background};\r\n  color: ${({ theme }) => theme.color.text};\r\n}\r\n\r\na {\r\n  text-decoration: none;\r\n}\r\n\r\nbutton, input, ::placeholder, a {\r\n    font-family: inherit;\r\n    color: inherit;\r\n  }\r\n  \r\n  a, p, h1, h2, label, span {\r\n    line-height: 1.6;\r\n    \r\n  \r\n  }\r\n\r\n`;\r\n\r\nexport default GlobalStyles;\r\n","import { FC } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { ThemeProvider } from 'styled-components';\n\nimport { useToggleTheme } from './hooks/useToggleTheme';\nimport { ALL_URL, useFetch } from './hooks/useFetch';\nimport { lightTheme, darkTheme } from './theme/theme';\n\nimport ContentWrapper from './components/ContentWrapper/ContentWrapper';\nimport DetailsView from './views/DetailsView/DetailsView';\nimport HomeView from './views/HomeView/HomeView';\nimport Nav from './components/Nav/Nav';\nimport PageNotFoundView from './views/PageNotFoundView/PageNotFoundView';\n\nimport GlobalStyles from './theme/GlobalStyles';\n\nconst App: FC = () => {\n\tconst [theme, toggleTheme] = useToggleTheme();\n\n\tconst { data, isLoading, error } = useFetch(ALL_URL);\n\n\treturn (\n\t\t<>\n\t\t\t<ThemeProvider theme={theme === 'light' ? lightTheme : darkTheme}>\n\t\t\t\t<GlobalStyles />\n\t\t\t\t<Nav theme={theme} toggleTheme={toggleTheme} />\n\t\t\t\t<ContentWrapper>\n\t\t\t\t\t<Router basename={process.env.PUBLIC_URL}>\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\t\tpath='/'\n\t\t\t\t\t\t\t\trender={() => <HomeView data={data} isLoading={isLoading} error={error} />}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Route path='/details/:name' component={DetailsView} />\n\t\t\t\t\t\t\t<Route path='*' component={PageNotFoundView} />\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</Router>\n\t\t\t\t</ContentWrapper>\n\t\t\t</ThemeProvider>\n\t\t</>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}