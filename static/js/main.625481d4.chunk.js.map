{"version":3,"sources":["hooks/useToggleTheme.tsx","components/ContentWrapper/ContentWrapper.styles.tsx","components/ContentWrapper/ContentWrapper.tsx","views/DetailsView/DetailsView.tsx","services/CountriesService.ts","hooks/useSearch.tsx","utils/getPopulationNumberWithComas.ts","components/CountryItem/CountryItem.styles.tsx","components/CountryItem/CountryItem.tsx","components/Tooltip/Tooltip.styles.tsx","components/Tooltip/Tooltip.tsx","components/FilterBy/FilterBy.styles.tsx","components/FilterBy/FilterBy.tsx","components/SearchInput/SearchInput.styles.tsx","components/SearchInput/SearchInput.tsx","components/Filter/Filter.styles.tsx","components/Filter/Filter.tsx","views/HomeView/HomeView.tsx","components/Nav/Nav.styles.tsx","components/Nav/Nav.tsx","theme/GlobalStyles.tsx","theme/theme.tsx","App.tsx","serviceWorkerRegistration.ts","index.tsx"],"names":["THEME","StyledWrapper","styled","div","ContentWrapper","children","DetailsView","id","useParams","history","useHistory","onClick","push","CountriesService","countries","region","countryName","result","length","searchTerm","toLowerCase","filter","country","name","includes","defaultSearchValues","getPopulationNumberWithComas","value","valueArr","toString","split","reverse","lenght","resultArr","i","join","StyledItemWrapper","theme","color","elements","StyleItemImg","img","StyledItemContent","boxShadow","StyledItemTitle","p","fontSize","m","fontWeight","bold","StyledItemField","StyledItemFieldName","span","regular","CountryItem","src","flag","alt","population","capital","StyledTooltipList","ul","isOpen","StyledTooltipItem","li","regions","Tooltip","handleFilterChange","toggleTooltipOpen","map","StyledFilterByWrapper","StyledFilterByBtn","button","StyledBtnText","FilterBy","useState","setIsOpen","prev","btnIcon","className","StyledSearchInputWrapper","input","StyledFilterBtn","StyledFilterInput","SearchInput","handleInputChange","setValue","type","onChange","e","target","placeholder","StyledFilterWrapper","Filter","HomeView","setCountries","isLoading","setIsLoading","error","setError","data","searchValues","setSearchValues","filteredCountries","setFilteredCountries","useEffect","filterResult","getCountriesByFilter","useSearch","a","axios","get","message","fetchCities","style","display","flexWrap","justifyContent","StyledNav","nav","StyledNavTitle","StyledToggleThemeBtn","Nav","toggleTheme","themeIcon","LIGHT","themeText","DARK","GlobalStyles","createGlobalStyle","background","text","defaultTheme","s","l","xl","xxl","sl","thin","lightTheme","darkTheme","App","setTheme","useToggleTheme","basename","process","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.625481d4.chunk.js","sourcesContent":["import { useState } from 'react';\r\n\r\nexport type UpdateType = () => void;\r\n\r\nexport enum THEME {\r\n\tLIGHT = 'light',\r\n\tDARK = 'dark',\r\n}\r\n\r\nexport const useToggleTheme = (): [string, UpdateType] => {\r\n\tconst [theme, setTheme] = useState('light');\r\n\r\n\tconst toggleTheme: UpdateType = () => {\r\n\t\tif (theme === THEME.LIGHT) {\r\n\t\t\tsetTheme(THEME.DARK);\r\n\t\t} else {\r\n\t\t\tsetTheme(THEME.LIGHT);\r\n\t\t}\r\n\t};\r\n\r\n\treturn [theme, toggleTheme];\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledWrapper = styled.div`\r\n\tpadding: 20px;\r\n`;\r\n","import { FC } from 'react';\r\n\r\nimport { StyledWrapper } from './ContentWrapper.styles';\r\n\r\ninterface IProps {\r\n\tchildren: React.ReactNode;\r\n}\r\n\r\nconst ContentWrapper: FC<IProps> = ({ children }) => {\r\n\treturn <StyledWrapper>{children}</StyledWrapper>;\r\n};\r\n\r\nexport default ContentWrapper;\r\n","import { FC } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\ninterface IParams {\r\n\tid: string;\r\n}\r\n\r\nconst DetailsView: FC = () => {\r\n\tconst { id } = useParams<IParams>();\r\n\r\n\tconst history = useHistory();\r\n\r\n\tconst handleGoBack = (): void => history.push('/');\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<button onClick={handleGoBack}>Go back</button>\r\n\t\t\t{id}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default DetailsView;\r\n","import { CountryData, ICountry } from '../views/HomeView/HomeView';\r\n\r\nexport default class CountriesService {\r\n\tstatic getCountriesByFilter(\r\n\t\tcountries: CountryData,\r\n\t\t{ region, countryName }: { region: string; countryName: string }\r\n\t) {\r\n\t\tlet result = countries;\r\n\r\n\t\tif (countryName && countryName.length) {\r\n\t\t\tconst searchTerm = countryName.toLowerCase();\r\n\r\n\t\t\tresult = result.filter((country: ICountry) =>\r\n\t\t\t\tcountry.name.toLowerCase().includes(searchTerm)\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tif (region) {\r\n\t\t\tresult = result.filter((country: ICountry) =>\r\n\t\t\t\tcountry.region.toLowerCase().includes(region.toLowerCase())\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { CountryData } from '../views/HomeView/HomeView';\r\n\r\nimport CountriesService from '../services/CountriesService';\r\n\r\ninterface ISearchValues {\r\n\tcountryName: string;\r\n\tregion: string;\r\n}\r\n\r\nexport type UpdateInput = (e: React.ChangeEvent<HTMLInputElement>) => void;\r\nexport type UpdateFilter = (region: string) => void;\r\n\r\nconst defaultSearchValues: ISearchValues = { countryName: '', region: '' };\r\n\r\nexport const useSearch = (data: CountryData) => {\r\n\tconst [searchValues, setSearchValues] = useState<ISearchValues>(defaultSearchValues);\r\n\tconst [filteredCountries, setFilteredCountries] = useState<CountryData>([]);\r\n\r\n\tconst handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n\t\tconst { value } = e.target;\r\n\r\n\t\tsetSearchValues((prev) => ({ ...prev, countryName: value }));\r\n\t};\r\n\r\n\tconst handleFilterChange = (region: string): void => {\r\n\t\tsetSearchValues((prev) => ({ ...prev, region }));\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\t//TODO1: Add debounce\r\n\t\tconst filterResult = CountriesService.getCountriesByFilter(data, searchValues);\r\n\r\n\t\tsetFilteredCountries(filterResult);\r\n\t}, [data, searchValues]);\r\n\r\n\treturn { filteredCountries, handleInputChange, handleFilterChange };\r\n};\r\n","export const getPopulationNumberWithComas = (value: number): string => {\r\n\tconst valueArr = value.toString().split('').reverse();\r\n\tconst lenght = valueArr.length;\r\n\r\n\tconst resultArr = [];\r\n\r\n\tfor (let i = 0; i <= lenght - 1; i++) {\r\n\t\tif (i % 3 === 0 && i) {\r\n\t\t\tresultArr.push(',');\r\n\t\t}\r\n\r\n\t\tresultArr.push(valueArr[i]);\r\n\t}\r\n\r\n\treturn resultArr.reverse().join('');\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledItemWrapper = styled.div`\r\n\tborder-radius: 4px;\r\n\twidth: 90%;\r\n\tmin-width: 300px;\r\n\tmax-width: 300px;\r\n\tmargin: 0 20px 40px 20px;\r\n\tbackground-color: ${({ theme }) => theme.color.elements};\r\n`;\r\n\r\nexport const StyleItemImg = styled.img`\r\n\twidth: 300px;\r\n\theight: 200px;\r\n\tborder-radius: 4px 4px 0 0;\r\n`;\r\n\r\nexport const StyledItemContent = styled.div`\r\n\tpadding: 30px 20px 40px 20px;\r\n\tbox-shadow: ${({ theme }) => theme.boxShadow};\r\n`;\r\n\r\nexport const StyledItemTitle = styled.p`\r\n\tmargin-bottom: 20px;\r\n\tfont-size: ${({ theme }) => theme.fontSize.m};\r\n\tfont-weight: ${({ theme }) => theme.fontWeight.bold};\r\n`;\r\n\r\nexport const StyledItemField = styled.p`\r\n\tmargin-bottom: 5px;\r\n`;\r\n\r\nexport const StyledItemFieldName = styled.span`\r\n\tfont-weight: ${({ theme }) => theme.fontWeight.regular};\r\n`;\r\n","import { FC } from 'react';\r\n\r\nimport { getPopulationNumberWithComas } from '../../utils/getPopulationNumberWithComas';\r\nimport { ICountry } from '../../views/HomeView/HomeView';\r\n\r\nimport {\r\n\tStyledItemWrapper,\r\n\tStyledItemContent,\r\n\tStyleItemImg,\r\n\tStyledItemField,\r\n\tStyledItemFieldName,\r\n\tStyledItemTitle,\r\n} from './CountryItem.styles';\r\ninterface IProps {\r\n\tcountry: ICountry;\r\n}\r\n\r\nconst CountryItem: FC<IProps> = ({ country }) => {\r\n\treturn (\r\n\t\t<StyledItemWrapper>\r\n\t\t\t<StyleItemImg src={country.flag} alt='' />\r\n\t\t\t<StyledItemContent>\r\n\t\t\t\t<StyledItemTitle>{country.name}</StyledItemTitle>\r\n\t\t\t\t<StyledItemField>\r\n\t\t\t\t\t<StyledItemFieldName>Population: </StyledItemFieldName>\r\n\t\t\t\t\t{getPopulationNumberWithComas(country.population)}\r\n\t\t\t\t</StyledItemField>\r\n\t\t\t\t<StyledItemField>\r\n\t\t\t\t\t<StyledItemFieldName>Region: </StyledItemFieldName>\r\n\t\t\t\t\t{country.region}\r\n\t\t\t\t</StyledItemField>\r\n\t\t\t\t<StyledItemField>\r\n\t\t\t\t\t<StyledItemFieldName>Capital: </StyledItemFieldName>\r\n\t\t\t\t\t{country.capital}\r\n\t\t\t\t</StyledItemField>\r\n\t\t\t</StyledItemContent>\r\n\t\t</StyledItemWrapper>\r\n\t);\r\n};\r\n\r\nexport default CountryItem;\r\n","import styled from 'styled-components';\r\n\r\ninterface IProps {\r\n\tisOpen: boolean;\r\n}\r\n\r\nexport const StyledTooltipList = styled.ul<IProps>`\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\tright: 0;\r\n\ttop: 110%;\r\n\topacity: ${({ isOpen }) => (isOpen ? 1 : 0)};\r\n\tvisibility: ${({ isOpen }) => (isOpen ? 'visible' : 'hidden')};\r\n\tlist-style-type: none;\r\n\tbackground-color: ${({ theme }) => theme.color.elements};\r\n\tborder-radius: 4px;\r\n\tbox-shadow: ${({ theme }) => theme.boxShadow};\r\n\ttransition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out;\r\n`;\r\n\r\nexport const StyledTooltipItem = styled.li`\r\n\tpadding: 15px 20px;\r\n\tcursor: pointer;\r\n`;\r\n","import { FC } from 'react';\r\nimport { UpdateFilter } from '../../hooks/useSearch';\r\n\r\nimport { StyledTooltipList, StyledTooltipItem } from './Tooltip.styles';\r\n\r\ninterface IProps {\r\n\tisOpen: boolean;\r\n\thandleFilterChange: UpdateFilter;\r\n\ttoggleTooltipOpen: () => void;\r\n}\r\n\r\nconst regions = ['Africa', 'America', 'Asia', 'Europe', 'Oceania'];\r\n\r\nconst Tooltip: FC<IProps> = ({ isOpen, handleFilterChange, toggleTooltipOpen }) => {\r\n\treturn (\r\n\t\t<StyledTooltipList isOpen={isOpen}>\r\n\t\t\t{regions.map((region) => (\r\n\t\t\t\t<StyledTooltipItem\r\n\t\t\t\t\tkey={region}\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\thandleFilterChange(region);\r\n\t\t\t\t\t\ttoggleTooltipOpen();\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{region}\r\n\t\t\t\t</StyledTooltipItem>\r\n\t\t\t))}\r\n\t\t</StyledTooltipList>\r\n\t);\r\n};\r\n\r\nexport default Tooltip;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledFilterByWrapper = styled.div`\r\n\tposition: relative;\r\n\tbox-shadow: ${({ theme }) => theme.boxShadow};\r\n\tmargin-bottom: 30px;\r\n`;\r\n\r\nexport const StyledFilterByBtn = styled.button`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tborder: none;\r\n\theight: 100%;\r\n\tborder-radius: 4px;\r\n\tpadding: 15px 20px;\r\n\tbackground-color: ${({ theme }) => theme.color.elements};\r\n\toutline: none;\r\n\tcursor: pointer;\r\n`;\r\n\r\nexport const StyledBtnText = styled.span`\r\n\tmargin-right: 50px;\r\n`;\r\n","import { FC, useState } from 'react';\r\nimport { UpdateFilter } from '../../hooks/useSearch';\r\n\r\nimport Tooltip from '../Tooltip/Tooltip';\r\n\r\nimport { StyledFilterByWrapper, StyledFilterByBtn, StyledBtnText } from './FilterBy.styles';\r\n\r\ninterface IProps {\r\n\thandleFilterChange: UpdateFilter;\r\n}\r\n\r\nconst FilterBy: FC<IProps> = ({ handleFilterChange }) => {\r\n\tconst [isOpen, setIsOpen] = useState<boolean>(false);\r\n\r\n\tconst toggleTooltipOpen = (): void => {\r\n\t\tsetIsOpen((prev) => !prev);\r\n\t};\r\n\r\n\tconst btnIcon = isOpen ? (\r\n\t\t<i className='fas fa-angle-up'></i>\r\n\t) : (\r\n\t\t<i className='fas fa-angle-down'></i>\r\n\t);\r\n\r\n\t//TODO4: change name of btn Text while filtering, add also ability to remove filter\r\n\treturn (\r\n\t\t<StyledFilterByWrapper>\r\n\t\t\t<StyledFilterByBtn onClick={toggleTooltipOpen}>\r\n\t\t\t\t<StyledBtnText>Filter by Region</StyledBtnText>\r\n\t\t\t\t{btnIcon}\r\n\t\t\t</StyledFilterByBtn>\r\n\t\t\t<Tooltip\r\n\t\t\t\tisOpen={isOpen}\r\n\t\t\t\thandleFilterChange={handleFilterChange}\r\n\t\t\t\ttoggleTooltipOpen={toggleTooltipOpen}\r\n\t\t\t/>\r\n\t\t</StyledFilterByWrapper>\r\n\t);\r\n};\r\n\r\nexport default FilterBy;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledSearchInputWrapper = styled.div`\r\n\tdisplay: flex;\r\n\tpadding: 10px;\r\n\tbox-shadow: ${({ theme }) => theme.boxShadow};\r\n\tflex-basis: 100%;\r\n\tcolor: ${({ theme }) => theme.color.input};\r\n\tbackground-color: ${({ theme }) => theme.color.elements};\r\n\tborder-radius: 4px;\r\n\tmargin-bottom: 30px;\r\n\r\n\t@media (min-width: 600px) {\r\n\t\tflex-basis: 40%;\r\n\t}\r\n`;\r\n\r\nexport const StyledFilterBtn = styled.button`\r\n\tfont-size: ${({ theme }) => theme.fontSize.m};\r\n\tbackground-color: transparent;\r\n\tmargin: 0 20px;\r\n\tborder: none;\r\n\toutline: none;\r\n\tcursor: pointer;\r\n`;\r\n\r\nexport const StyledFilterInput = styled.input`\r\n\tbackground-color: transparent;\r\n\tpadding: 10px;\r\n\tflex-grow: 1;\r\n\tborder: none;\r\n\toutline: none;\r\n`;\r\n","import { FC, useState } from 'react';\r\nimport { UpdateInput } from '../../hooks/useSearch';\r\n\r\nimport { StyledFilterBtn, StyledFilterInput, StyledSearchInputWrapper } from './SearchInput.styles';\r\n\r\ninterface IProps {\r\n\thandleInputChange: UpdateInput;\r\n}\r\n\r\nconst SearchInput: FC<IProps> = ({ handleInputChange }) => {\r\n\tconst [value, setValue] = useState<string>('');\r\n\r\n\treturn (\r\n\t\t<StyledSearchInputWrapper>\r\n\t\t\t{/* //TODO6: remove button */}\r\n\t\t\t<StyledFilterBtn>\r\n\t\t\t\t<i className='fas fa-search'></i>\r\n\t\t\t</StyledFilterBtn>\r\n\t\t\t<StyledFilterInput\r\n\t\t\t\ttype='text'\r\n\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t//TODO5: send down from hook value or leave it like it is?\r\n\t\t\t\t\tconst { value } = e.target;\r\n\r\n\t\t\t\t\tsetValue(value);\r\n\t\t\t\t\thandleInputChange(e);\r\n\t\t\t\t}}\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tplaceholder='Search for a country...'\r\n\t\t\t/>\r\n\t\t</StyledSearchInputWrapper>\r\n\t);\r\n};\r\n\r\nexport default SearchInput;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledFilterWrapper = styled.div`\r\n\tdisplay: flex;\r\n\tflex-wrap: wrap;\r\n\r\n\t@media (min-width: 600px) {\r\n\t\tjustify-content: space-between;\r\n\t}\r\n`;\r\n","import { FC } from 'react';\r\nimport { UpdateFilter, UpdateInput } from '../../hooks/useSearch';\r\n\r\nimport FilterBy from '../FilterBy/FilterBy';\r\nimport SearchInput from '../SearchInput/SearchInput';\r\n\r\nimport { StyledFilterWrapper } from './Filter.styles';\r\n\r\ninterface IProps {\r\n\thandleInputChange: UpdateInput;\r\n\thandleFilterChange: UpdateFilter;\r\n}\r\n\r\nconst Filter: FC<IProps> = ({ handleInputChange, handleFilterChange }) => {\r\n\treturn (\r\n\t\t<StyledFilterWrapper>\r\n\t\t\t<SearchInput handleInputChange={handleInputChange} />\r\n\t\t\t<FilterBy handleFilterChange={handleFilterChange} />\r\n\t\t</StyledFilterWrapper>\r\n\t);\r\n};\r\n\r\nexport default Filter;\r\n","import { FC, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport { useSearch } from '../../hooks/useSearch';\r\n\r\nimport CountryItem from '../../components/CountryItem/CountryItem';\r\nimport Filter from '../../components/Filter/Filter';\r\n\r\n//TODO3: move fetching to separate hook?\r\nexport interface ICountry {\r\n\tname: string;\r\n\tflag: string;\r\n\tpopulation: number;\r\n\tregion: string;\r\n\tsubregion: string;\r\n\tcapital: string;\r\n\tnativName: string;\r\n\ttopLevelDomain: string[];\r\n\tcurrencies: object[];\r\n\tlanguages: object[];\r\n}\r\n\r\nexport type CountryData = ICountry[] | [];\r\n\r\nconst HomeView: FC = () => {\r\n\tconst [countries, setCountries] = useState<CountryData>([]);\r\n\tconst [isLoading, setIsLoading] = useState<boolean>(false);\r\n\tconst [error, setError] = useState<string>('');\r\n\r\n\tconst { filteredCountries, handleInputChange, handleFilterChange } = useSearch(countries);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchCities = async () => {\r\n\t\t\tsetIsLoading(true);\r\n\r\n\t\t\ttry {\r\n\t\t\t\tconst { data } = await axios.get('https://restcountries.eu/rest/v2/all');\r\n\r\n\t\t\t\tif (data) {\r\n\t\t\t\t\tsetCountries(data);\r\n\t\t\t\t\tsetIsLoading(false);\r\n\t\t\t\t\tsetError('');\r\n\t\t\t\t}\r\n\t\t\t} catch (e) {\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t\tsetError(e.message);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tfetchCities();\r\n\t}, []);\r\n\r\n\t//TODO2: Add pagination, display only 8 countries at start\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Filter handleInputChange={handleInputChange} handleFilterChange={handleFilterChange} />\r\n\t\t\t{error && <p>{error}</p>}\r\n\t\t\t{!isLoading && (\r\n\t\t\t\t<div style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'space-around' }}>\r\n\t\t\t\t\t{filteredCountries.map((country: ICountry) => (\r\n\t\t\t\t\t\t<CountryItem country={country} key={country.name} />\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default HomeView;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledNav = styled.nav`\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\talign-items: center;\r\n\theight: 50px;\r\n\tpadding: 40px 20px;\r\n\tbox-shadow: ${({ theme }) => theme.boxShadow};\r\n\tbackground-color: ${({ theme }) => theme.color.elements};\r\n`;\r\n\r\nexport const StyledNavTitle = styled.p`\r\n\tfont-size: ${({ theme }) => theme.fontSize.m};\r\n\tfont-weight: ${({ theme }) => theme.fontWeight.bold};\r\n`;\r\n\r\nexport const StyledToggleThemeBtn = styled.button`\r\n\tborder: none;\r\n\tbackground: transparent;\r\n\toutline: none;\r\n\ttext-transform: capitalize;\r\n\tfont-weight: ${({ theme }) => theme.fontWeight.regular};\r\n\tcursor: pointer;\r\n\r\n\t& .far {\r\n\t\tmargin-right: 10px;\r\n\t}\r\n`;\r\n","import { FC } from 'react';\r\nimport { THEME, UpdateType } from '../../hooks/useToggleTheme';\r\n\r\nimport { StyledNav, StyledNavTitle, StyledToggleThemeBtn } from './Nav.styles';\r\n\r\nexport interface IProps {\r\n\ttoggleTheme: UpdateType;\r\n\ttheme: string;\r\n}\r\n\r\nconst Nav: FC<IProps> = ({ theme, toggleTheme }) => {\r\n\tconst themeIcon =\r\n\t\ttheme === THEME.LIGHT ? <i className='far fa-moon'></i> : <i className='far fa-sun'></i>;\r\n\r\n\tconst themeText = `${theme === THEME.LIGHT ? THEME.DARK : THEME.LIGHT} mode`;\r\n\r\n\treturn (\r\n\t\t<StyledNav>\r\n\t\t\t<StyledNavTitle>Where in the world?</StyledNavTitle>\r\n\t\t\t<StyledToggleThemeBtn onClick={() => toggleTheme()}>\r\n\t\t\t\t{themeIcon}\r\n\t\t\t\t{themeText}\r\n\t\t\t</StyledToggleThemeBtn>\r\n\t\t</StyledNav>\r\n\t);\r\n};\r\n\r\nexport default Nav;\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n\r\n*, *::after, *::before {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\nbody{\r\n  font-family: 'Nunito Sans', sans-serif;\r\n  font-size: 14px;\r\n  background-color: ${({ theme }) => theme.color.background};\r\n  color: ${({ theme }) => theme.color.text};\r\n}\r\n\r\nbutton, input, ::placeholder {\r\n    font-family: inherit;\r\n    color: inherit;\r\n  }\r\n  \r\n  p, h1, h2, label, span {\r\n    line-height: 1.6;\r\n    \r\n  \r\n  }\r\n\r\n`;\r\n\r\nexport default GlobalStyles;\r\n","import { DefaultTheme } from 'styled-components';\r\n\r\nconst defaultTheme = {\r\n\tboxShadow: '0 1px 3px 0 rgb(0 0 0 / 10%), 0 1px 2px 0 rgb(0 0 0 / 6%)',\r\n\tfontSize: {\r\n\t\ts: '14px',\r\n\t\tm: '18px',\r\n\t\tl: '26px',\r\n\t\txl: '32px',\r\n\t\txxl: '38px',\r\n\t\tsl: '44px',\r\n\t},\r\n\tfontWeight: {\r\n\t\tthin: 300,\r\n\t\tregular: 600,\r\n\t\tbold: 800,\r\n\t},\r\n};\r\n\r\nexport const lightTheme: DefaultTheme = {\r\n\tcolor: {\r\n\t\ttext: 'hsl(200, 15%, 8%)',\r\n\t\tbackground: 'hsl(0, 0%, 98%)',\r\n\t\telements: 'hsl(0, 0%, 100%)',\r\n\t\tinput: 'hsl(0, 0%, 52%)',\r\n\t},\r\n\r\n\tboxShadow: defaultTheme.boxShadow,\r\n\tfontSize: defaultTheme.fontSize,\r\n\tfontWeight: defaultTheme.fontWeight,\r\n\r\n\t// devices: {\r\n\t// \tmobileM: `(min-width: 375px)`,\r\n\t// \ttablet: `(min-width: 768px)`,\r\n\t// \tlaptop: `(min-width: 1024px)`,\r\n\t// \tdesktop: `(min-width: 1440px)`,\r\n\t// },\r\n\r\n\t// boxShadow: '',\r\n};\r\n\r\nexport const darkTheme: DefaultTheme = {\r\n\tcolor: {\r\n\t\ttext: 'hsl(0, 0%, 100%)',\r\n\t\tbackground: 'hsl(207, 26%, 17%)',\r\n\t\telements: 'hsl(209, 23%, 22%)',\r\n\t\tinput: 'hsl(0, 0%, 100%)',\r\n\t},\r\n\r\n\tboxShadow: defaultTheme.boxShadow,\r\n\tfontSize: defaultTheme.fontSize,\r\n\tfontWeight: defaultTheme.fontWeight,\r\n};\r\n","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { ThemeProvider } from 'styled-components';\n\nimport { useToggleTheme } from './hooks/useToggleTheme';\n\nimport ContentWrapper from './components/ContentWrapper/ContentWrapper';\nimport DetailsView from './views/DetailsView/DetailsView';\nimport HomeView from './views/HomeView/HomeView';\nimport Nav from './components/Nav/Nav';\n\nimport GlobalStyles from './theme/GlobalStyles';\nimport { lightTheme, darkTheme } from './theme/theme';\n\nfunction App() {\n\tconst [theme, toggleTheme] = useToggleTheme();\n\treturn (\n\t\t<>\n\t\t\t<ThemeProvider theme={theme === 'light' ? lightTheme : darkTheme}>\n\t\t\t\t<GlobalStyles />\n\t\t\t\t<Nav theme={theme} toggleTheme={toggleTheme} />\n\t\t\t\t<ContentWrapper>\n\t\t\t\t\t<Router basename={process.env.PUBLIC_URL}>\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route exact path='/' component={HomeView} />\n\t\t\t\t\t\t\t<Route path='/:id' component={DetailsView} />\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</Router>\n\t\t\t\t</ContentWrapper>\n\t\t\t</ThemeProvider>\n\t\t</>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n"],"sourceRoot":""}