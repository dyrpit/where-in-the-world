{"version":3,"sources":["hooks/useToggleTheme.tsx","components/ContentWrapper/ContentWrapper.styles.tsx","components/ContentWrapper/ContentWrapper.tsx","components/Button/Button.styles.tsx","components/Button/Button.tsx","utils/getPopulationNumberWithComas.ts","components/BorderCountryItem/BorderCountryItem.styles.tsx","components/BorderCountryItem/BorderCountryItem.tsx","components/CountryDetailsField/CountryDetailsField.styles.tsx","components/CountryDetailsField/CountryDetailsField.tsx","components/CountryDetails/CountryDetails.styles.tsx","components/CountryDetails/CountryDetails.tsx","views/DetailsView/DetailsView.tsx","services/CountriesService.ts","hooks/useSearch.tsx","components/CountryItem/CountryItem.styles.tsx","components/CountryItem/CountryItem.tsx","components/Tooltip/Tooltip.styles.tsx","components/Tooltip/Tooltip.tsx","components/FilterBy/FilterBy.styles.tsx","components/FilterBy/FilterBy.tsx","components/SearchInput/SearchInput.styles.tsx","components/SearchInput/SearchInput.tsx","components/Filter/Filter.styles.tsx","components/Filter/Filter.tsx","components/PaginationControl/PaginationControl.styles.tsx","components/PaginationControl/PaginationControl.tsx","views/HomeView/HomeView.styles.tsx","views/HomeView/HomeView.tsx","hooks/usePagination.tsx","components/Nav/Nav.styles.tsx","components/Nav/Nav.tsx","theme/GlobalStyles.tsx","theme/theme.tsx","App.tsx","serviceWorkerRegistration.ts","index.tsx"],"names":["THEME","StyledWrapper","styled","div","theme","devices","tablet","ContentWrapper","children","StyledButton","button","color","elements","boxShadow","Button","handleGoBack","title","onClick","className","getPopulationNumberWithComas","value","valueArr","toString","split","reverse","lenght","length","resultArr","i","push","join","StyledBorderCountry","Link","BorderCountry","useState","borderCountry","setBorderCountry","setIsLoading","setError","country","useEffect","a","axios","get","data","name","message","fetchBorderCountry","to","StyledCountryField","p","StyledCountryFieldName","span","fontWeight","bold","StyledCountryFieldNameValue","thin","CountryDetailsField","fieldName","fieldValue","displayedValue","Array","isArray","map","StyledDetailsWrapper","StyledImgWrapper","StyledImg","img","StyledCountryDetails","StyledCountryDetailsSection","StyledCountryName","fontSize","m","l","StyledBorderCountryWrapper","StyledTitle","regular","CountryDetails","src","flag","alt","population","region","subregion","capital","topLevelDomain","currencies","languages","borders","border","DetailsView","setCountry","error","useParams","history","useHistory","fetchCity","CountriesService","countries","countryName","result","searchTerm","toLowerCase","filter","includes","defaultSearchValues","StyledItemWrapper","StyleItemImg","StyledItemContent","StyledItemTitle","StyledItemField","StyledItemFieldName","CountryItem","StyledTooltipList","ul","isOpen","StyledTooltipItem","li","regions","Tooltip","currentRegion","handleFilterChange","toggleTooltipOpen","setCurrentRegion","handleChangeRegion","StyledFilterByWrapper","StyledFilterByBtn","StyledBtnText","FilterBy","setIsOpen","prev","btnIcon","StyledSearchInputWrapper","input","StyledFilterBtn","StyledFilterInput","SearchInput","handleInputChange","handleResetInput","setValue","searchIcon","type","onChange","e","target","placeholder","StyledFilterWrapper","Filter","PaginationWrapper","PaginationPagesDisplay","PaginationPageItemDisplay","PaginationTooltipWrapper","PaginationControlBtn","PaginationControlBtnText","PaginationTooltip","PaginationTooltipItem","paginationTooltipOptions","PaginationControl","currentPage","handleItemsPerPage","handleNextPage","handlePrevPage","itemsPerPage","pages","option","StyledCountriesDisplayWrapper","HomeView","setCountries","isLoading","delay","searchValues","setSearchValues","filteredCountries","setFilteredCountries","timeoutId","setTimeout","filterResult","getCountriesByFilter","clearTimeout","useSearch","countriesLength","setItemsPerPage","setCurrentPage","Math","ceil","setPages","numOfItemsPerPage","usePagination","fetchCities","slice","StyledNav","nav","StyledNavTitle","StyledToggleThemeBtn","Nav","toggleTheme","themeIcon","LIGHT","themeText","DARK","GlobalStyles","createGlobalStyle","background","text","defaultTheme","s","xl","xxl","sl","mobileM","laptop","desktop","lightTheme","darkTheme","App","setTheme","setUserTheme","window","localStorage","setItem","userTheme","getItem","useToggleTheme","basename","process","exact","path","component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.cb0995a4.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\r\n\r\nexport type UpdateType = () => void;\r\n\r\nexport enum THEME {\r\n\tLIGHT = 'light',\r\n\tDARK = 'dark',\r\n}\r\n\r\nexport const useToggleTheme = (): [string, UpdateType] => {\r\n\tconst [theme, setTheme] = useState<string>(THEME.LIGHT);\r\n\r\n\tconst setUserTheme = (theme: string): void => {\r\n\t\twindow.localStorage.setItem('theme', theme);\r\n\t\tsetTheme(theme);\r\n\t};\r\n\r\n\tconst toggleTheme: UpdateType = () => {\r\n\t\tif (theme === THEME.LIGHT) {\r\n\t\t\tsetUserTheme(THEME.DARK);\r\n\t\t} else {\r\n\t\t\tsetUserTheme(THEME.LIGHT);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tconst userTheme: string = window.localStorage.getItem('theme') || THEME.LIGHT;\r\n\r\n\t\tsetUserTheme(userTheme);\r\n\t}, []);\r\n\r\n\treturn [theme, toggleTheme];\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledWrapper = styled.div`\r\n\tpadding: 20px;\r\n\r\n\t@media ${({ theme }) => theme.devices.tablet} {\r\n\t\tpadding: 40px;\r\n\t}\r\n`;\r\n","import { FC } from 'react';\r\n\r\nimport { StyledWrapper } from './ContentWrapper.styles';\r\n\r\ninterface IProps {\r\n\tchildren: React.ReactNode;\r\n}\r\n\r\nconst ContentWrapper: FC<IProps> = ({ children }) => {\r\n\treturn <StyledWrapper>{children}</StyledWrapper>;\r\n};\r\n\r\nexport default ContentWrapper;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledButton = styled.button`\r\n\tmargin: 20px 0;\r\n\tpadding: 10px 20px;\r\n\tbackground-color: ${({ theme }) => theme.color.elements};\r\n\tborder: none;\r\n\tbox-shadow: ${({ theme }) => theme.boxShadow};\r\n\tcursor: pointer;\r\n\r\n\t& i {\r\n\t\tmargin-right: 10px;\r\n\t}\r\n`;\r\n","import { FC } from 'react';\r\n\r\nimport { StyledButton } from './Button.styles';\r\n\r\ninterface IProps {\r\n\thandleGoBack: () => void;\r\n\ttitle: string;\r\n}\r\n\r\nconst Button: FC<IProps> = ({ handleGoBack, title }) => {\r\n\treturn (\r\n\t\t<StyledButton onClick={handleGoBack}>\r\n\t\t\t<i className='fas fa-arrow-left'></i>\r\n\t\t\t{title}\r\n\t\t</StyledButton>\r\n\t);\r\n};\r\n\r\nexport default Button;\r\n","export const getPopulationNumberWithComas = (value: number = 0): string => {\r\n\tconst valueArr = value.toString().split('').reverse();\r\n\tconst lenght = valueArr.length;\r\n\r\n\tconst resultArr = [];\r\n\r\n\tfor (let i = 0; i <= lenght - 1; i++) {\r\n\t\tif (i % 3 === 0 && i) {\r\n\t\t\tresultArr.push(',');\r\n\t\t}\r\n\r\n\t\tresultArr.push(valueArr[i]);\r\n\t}\r\n\r\n\treturn resultArr.reverse().join('');\r\n};\r\n","import { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledBorderCountry = styled(Link)`\r\n\tbackground-color: ${({ theme }) => theme.color.elements};\r\n\tpadding: 10px 20px;\r\n\tbox-shadow: ${({ theme }) => theme.boxShadow};\r\n\tmargin: 10px 5px;\r\n`;\r\n","import { FC, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport { StyledBorderCountry } from './BorderCountryItem.styles';\r\n\r\nconst BorderCountry: FC = ({ children }) => {\r\n\tconst [borderCountry, setBorderCountry] = useState<string>('');\r\n\tconst [isLoading, setIsLoading] = useState<boolean>(false);\r\n\tconst [error, setError] = useState<string>('');\r\n\r\n\tconst country = borderCountry ? borderCountry : 'No border country';\r\n\r\n\t//TODO: add error and loading handle\r\n\tuseEffect(() => {\r\n\t\tconst fetchBorderCountry = async () => {\r\n\t\t\tsetIsLoading(true);\r\n\r\n\t\t\ttry {\r\n\t\t\t\tconst { data } = await axios.get(\r\n\t\t\t\t\t`https://restcountries.eu/rest/v2/alpha/${children}?fields=name`\r\n\t\t\t\t);\r\n\r\n\t\t\t\tif (data) {\r\n\t\t\t\t\tsetBorderCountry(data.name);\r\n\t\t\t\t\tsetIsLoading(false);\r\n\t\t\t\t\tsetError('');\r\n\t\t\t\t}\r\n\t\t\t} catch (e) {\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t\tsetError(e.message);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tfetchBorderCountry();\r\n\t}, [children]);\r\n\r\n\treturn <StyledBorderCountry to={country}>{country}</StyledBorderCountry>;\r\n};\r\n\r\nexport default BorderCountry;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledCountryField = styled.p`\r\n\tmargin-bottom: 15px;\r\n`;\r\n\r\nexport const StyledCountryFieldName = styled.span`\r\n\tfont-weight: ${({ theme }) => theme.fontWeight.bold};\r\n\tmargin-right: 5px;\r\n`;\r\n\r\nexport const StyledCountryFieldNameValue = styled.span`\r\n\tfont-weight: ${({ theme }) => theme.fontWeight.thin};\r\n\tmargin-right: 5px;\r\n\r\n\t&::after {\r\n\t\tcontent: ',';\r\n\t}\r\n\r\n\t&:last-child::after {\r\n\t\tcontent: '';\r\n\t}\r\n`;\r\n","import { FC } from 'react';\r\nimport { ICurrency, ILanguage } from '../../views/HomeView/HomeView';\r\n\r\nimport {\r\n\tStyledCountryField,\r\n\tStyledCountryFieldName,\r\n\tStyledCountryFieldNameValue,\r\n} from './CountryDetailsField.styles';\r\n\r\ninterface IProps {\r\n\tfieldName: string;\r\n\tfieldValue: string | string[] | ICurrency[] | ILanguage[];\r\n}\r\n\r\nconst CountryDetailsField: FC<IProps> = ({ fieldName, fieldValue }) => {\r\n\tconst displayedValue = !Array.isArray(fieldValue)\r\n\t\t? fieldValue\r\n\t\t: fieldValue.map((value) => (\r\n\t\t\t\t<StyledCountryFieldNameValue>\r\n\t\t\t\t\t{typeof value === 'string' ? value : value.name}\r\n\t\t\t\t</StyledCountryFieldNameValue>\r\n\t\t  ));\r\n\r\n\treturn (\r\n\t\t<StyledCountryField>\r\n\t\t\t<StyledCountryFieldName>{fieldName} </StyledCountryFieldName>\r\n\t\t\t{displayedValue}\r\n\t\t</StyledCountryField>\r\n\t);\r\n};\r\n\r\nexport default CountryDetailsField;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledDetailsWrapper = styled.div`\r\n\tpadding: 30px 0;\r\n\r\n\t@media ${({ theme }) => theme.devices.tablet} {\r\n\t\tdisplay: flex;\r\n\t\tpadding: 60px 0;\r\n\t}\r\n`;\r\n\r\nexport const StyledImgWrapper = styled.div`\r\n\tmargin: 0 auto;\r\n\twidth: 300px;\r\n\r\n\t@media ${({ theme }) => theme.devices.tablet} {\r\n\t\tflex-basis: 40%;\r\n\t\talign-self: center;\r\n\t}\r\n`;\r\n\r\nexport const StyledImg = styled.img`\r\n\twidth: 100%;\r\n`;\r\n\r\nexport const StyledCountryDetails = styled.div`\r\n\tmargin-top: 40px;\r\n\r\n\t@media ${({ theme }) => theme.devices.tablet} {\r\n\t\tflex-basis: 60%;\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t\tflex-wrap: wrap;\r\n\t\tmargin-top: 0;\r\n\t\tmargin-left: 100px;\r\n\t}\r\n`;\r\n\r\nexport const StyledCountryDetailsSection = styled.div`\r\n\tmargin-bottom: 40px;\r\n\r\n\t@media ${({ theme }) => theme.devices.tablet} {\r\n\t\tflex-basis: 50%;\r\n\t}\r\n`;\r\n\r\nexport const StyledCountryName = styled.p`\r\n\tfont-size: ${({ theme }) => theme.fontSize.m};\r\n\tfont-weight: ${({ theme }) => theme.fontWeight.bold};\r\n\tmargin-bottom: 30px;\r\n\r\n\t@media ${({ theme }) => theme.devices.tablet} {\r\n\t\tflex-basis: 100%;\r\n\t\tfont-size: ${({ theme }) => theme.fontSize.l};\r\n\t}\r\n`;\r\n\r\nexport const StyledBorderCountryWrapper = styled.div`\r\n\tdisplay: flex;\r\n\tflex-wrap: wrap;\r\n`;\r\n\r\nexport const StyledTitle = styled.p`\r\n\tfont-size: ${({ theme }) => theme.fontSize.m};\r\n\tfont-weight: ${({ theme }) => theme.fontWeight.regular};\r\n\tmargin-bottom: 10px;\r\n`;\r\n","import { FC } from 'react';\r\nimport { getPopulationNumberWithComas } from '../../utils/getPopulationNumberWithComas';\r\nimport { ICountry } from '../../views/HomeView/HomeView';\r\nimport BorderCountry from '../BorderCountryItem/BorderCountryItem';\r\nimport CountryDetailsField from '../CountryDetailsField/CountryDetailsField';\r\n\r\nimport {\r\n\tStyledBorderCountryWrapper,\r\n\tStyledDetailsWrapper,\r\n\tStyledImgWrapper,\r\n\tStyledImg,\r\n\tStyledCountryDetails,\r\n\tStyledCountryDetailsSection,\r\n\tStyledCountryName,\r\n\tStyledTitle,\r\n} from './CountryDetails.styles';\r\n\r\nimport { StyledBorderCountry } from '../BorderCountryItem/BorderCountryItem.styles';\r\n\r\ninterface IProps {\r\n\tcountry: ICountry;\r\n}\r\n\r\nconst CountryDetails: FC<IProps> = ({ country }) => {\r\n\treturn (\r\n\t\t<StyledDetailsWrapper>\r\n\t\t\t<StyledImgWrapper>\r\n\t\t\t\t<StyledImg src={country?.flag} alt={`${country.name} flag`} />\r\n\t\t\t</StyledImgWrapper>\r\n\t\t\t<StyledCountryDetails>\r\n\t\t\t\t<StyledCountryName>{country.name}</StyledCountryName>\r\n\t\t\t\t<StyledCountryDetailsSection>\r\n\t\t\t\t\t<CountryDetailsField fieldName='Native name:' fieldValue={country.name} />\r\n\t\t\t\t\t<CountryDetailsField\r\n\t\t\t\t\t\tfieldName='Population:'\r\n\t\t\t\t\t\tfieldValue={getPopulationNumberWithComas(country.population)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<CountryDetailsField fieldName='Region:' fieldValue={country.region} />\r\n\t\t\t\t\t<CountryDetailsField fieldName='Sub Region:' fieldValue={country.subregion} />\r\n\t\t\t\t\t<CountryDetailsField fieldName='Capital:' fieldValue={country.capital} />\r\n\t\t\t\t</StyledCountryDetailsSection>\r\n\t\t\t\t<StyledCountryDetailsSection>\r\n\t\t\t\t\t<CountryDetailsField fieldName='Top Level Domain:' fieldValue={country.topLevelDomain} />\r\n\t\t\t\t\t<CountryDetailsField fieldName='Currencies:' fieldValue={country.currencies} />\r\n\t\t\t\t\t<CountryDetailsField fieldName='Languages:' fieldValue={country.languages} />\r\n\t\t\t\t</StyledCountryDetailsSection>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<StyledTitle>Border Countries:</StyledTitle>\r\n\t\t\t\t\t<StyledBorderCountryWrapper>\r\n\t\t\t\t\t\t{country.borders.length ? (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t{country.borders.map((border) => (\r\n\t\t\t\t\t\t\t\t\t<BorderCountry key={border}>{border}</BorderCountry>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<StyledBorderCountry to='#'>No border countries</StyledBorderCountry>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</StyledBorderCountryWrapper>\r\n\t\t\t\t</div>\r\n\t\t\t</StyledCountryDetails>\r\n\t\t</StyledDetailsWrapper>\r\n\t);\r\n};\r\n\r\nexport default CountryDetails;\r\n","import { FC, useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { ICountry } from '../HomeView/HomeView';\r\nimport Button from '../../components/Button/Button';\r\nimport CountryDetails from '../../components/CountryDetails/CountryDetails';\r\n\r\ninterface IParams {\r\n\tname: string;\r\n}\r\n\r\nconst DetailsView: FC = () => {\r\n\tconst [country, setCountry] = useState<ICountry | null>(null);\r\n\tconst [isLoading, setIsLoading] = useState<boolean>(false);\r\n\tconst [error, setError] = useState<string>('');\r\n\r\n\tconst { name } = useParams<IParams>();\r\n\r\n\tconst history = useHistory();\r\n\r\n\tconst handleGoBack = (): void => history.push('/');\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchCity = async () => {\r\n\t\t\tsetIsLoading(true);\r\n\r\n\t\t\ttry {\r\n\t\t\t\tconst { data } = await axios.get(`https://restcountries.eu/rest/v2/name/${name}`);\r\n\r\n\t\t\t\tif (data) {\r\n\t\t\t\t\tconst country: ICountry = data[0];\r\n\t\t\t\t\tsetCountry(country);\r\n\t\t\t\t\tsetIsLoading(false);\r\n\t\t\t\t\tsetError('');\r\n\t\t\t\t}\r\n\t\t\t} catch (e) {\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t\tsetError(e.message);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tfetchCity();\r\n\t}, [name]);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Button handleGoBack={handleGoBack} title='Back' />\r\n\t\t\t{error}\r\n\t\t\t{country && <CountryDetails country={country} />}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default DetailsView;\r\n","import { CountryData, ICountry } from '../views/HomeView/HomeView';\r\n\r\nexport default class CountriesService {\r\n\tstatic getCountriesByFilter(\r\n\t\tcountries: CountryData,\r\n\t\t{ region, countryName }: { region: string; countryName: string }\r\n\t) {\r\n\t\tlet result = countries;\r\n\r\n\t\tif (countryName && countryName.length) {\r\n\t\t\tconst searchTerm = countryName.toLowerCase();\r\n\r\n\t\t\tresult = result.filter((country: ICountry) =>\r\n\t\t\t\tcountry.name.toLowerCase().includes(searchTerm)\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tif (region) {\r\n\t\t\tresult = result.filter((country: ICountry) =>\r\n\t\t\t\tcountry.region.toLowerCase().includes(region.toLowerCase())\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { CountryData } from '../views/HomeView/HomeView';\r\n\r\nimport CountriesService from '../services/CountriesService';\r\n\r\ninterface ISearchValues {\r\n\tcountryName: string;\r\n\tregion: string;\r\n}\r\n\r\nexport type UpdateInput = (e: React.ChangeEvent<HTMLInputElement>) => void;\r\nexport type UpdateFilter = (region: string) => void;\r\n\r\nconst defaultSearchValues: ISearchValues = { countryName: '', region: '' };\r\n\r\nexport const useSearch = (data: CountryData, delay: number = 500) => {\r\n\tconst [searchValues, setSearchValues] = useState<ISearchValues>(defaultSearchValues);\r\n\tconst [filteredCountries, setFilteredCountries] = useState<CountryData>([]);\r\n\r\n\tconst handleInputChange: UpdateInput = (e) => {\r\n\t\tconst { value } = e.target;\r\n\r\n\t\tsetSearchValues((prev) => ({ ...prev, countryName: value }));\r\n\t};\r\n\r\n\tconst handleFilterChange: UpdateFilter = (region) => {\r\n\t\tsetSearchValues((prev) => ({ ...prev, region }));\r\n\t};\r\n\r\n\tconst handleResetInput = () => {\r\n\t\tsetSearchValues((prev) => ({ ...prev, countryName: '' }));\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tconst timeoutId = setTimeout(() => {\r\n\t\t\tconst filterResult = CountriesService.getCountriesByFilter(data, searchValues);\r\n\r\n\t\t\tsetFilteredCountries(filterResult);\r\n\t\t}, delay);\r\n\r\n\t\treturn () => clearTimeout(timeoutId);\r\n\t}, [data, searchValues, delay]);\r\n\r\n\treturn { filteredCountries, handleInputChange, handleFilterChange, handleResetInput };\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledItemWrapper = styled.div`\r\n\tborder-radius: 4px;\r\n\twidth: 90%;\r\n\tmin-width: 300px;\r\n\tmax-width: 300px;\r\n\tmargin: 0 20px 40px 20px;\r\n\tbackground-color: ${({ theme }) => theme.color.elements};\r\n`;\r\n\r\nexport const StyleItemImg = styled.img`\r\n\twidth: 300px;\r\n\theight: 200px;\r\n\tborder-radius: 4px 4px 0 0;\r\n`;\r\n\r\nexport const StyledItemContent = styled.div`\r\n\tpadding: 30px 20px 40px 20px;\r\n\tbox-shadow: ${({ theme }) => theme.boxShadow};\r\n`;\r\n\r\nexport const StyledItemTitle = styled.p`\r\n\tdisplay: block;\r\n\tmargin-bottom: 20px;\r\n\tfont-size: ${({ theme }) => theme.fontSize.m};\r\n\tfont-weight: ${({ theme }) => theme.fontWeight.bold};\r\n`;\r\n\r\nexport const StyledItemField = styled.p`\r\n\tmargin-bottom: 5px;\r\n`;\r\n\r\nexport const StyledItemFieldName = styled.span`\r\n\tfont-weight: ${({ theme }) => theme.fontWeight.regular};\r\n`;\r\n","import { FC } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { getPopulationNumberWithComas } from '../../utils/getPopulationNumberWithComas';\r\nimport { ICountry } from '../../views/HomeView/HomeView';\r\n\r\nimport {\r\n\tStyledItemWrapper,\r\n\tStyledItemContent,\r\n\tStyleItemImg,\r\n\tStyledItemField,\r\n\tStyledItemFieldName,\r\n\tStyledItemTitle,\r\n} from './CountryItem.styles';\r\ninterface IProps {\r\n\tcountry: ICountry;\r\n}\r\n\r\nconst CountryItem: FC<IProps> = ({ country }) => {\r\n\treturn (\r\n\t\t<Link to={country.name.toLowerCase()}>\r\n\t\t\t<StyledItemWrapper>\r\n\t\t\t\t<StyleItemImg src={country.flag} alt='' />\r\n\t\t\t\t<StyledItemContent>\r\n\t\t\t\t\t<StyledItemTitle>{country.name}</StyledItemTitle>\r\n\t\t\t\t\t<StyledItemField>\r\n\t\t\t\t\t\t<StyledItemFieldName>Population: </StyledItemFieldName>\r\n\t\t\t\t\t\t{getPopulationNumberWithComas(country.population)}\r\n\t\t\t\t\t</StyledItemField>\r\n\t\t\t\t\t<StyledItemField>\r\n\t\t\t\t\t\t<StyledItemFieldName>Region: </StyledItemFieldName>\r\n\t\t\t\t\t\t{country.region}\r\n\t\t\t\t\t</StyledItemField>\r\n\t\t\t\t\t<StyledItemField>\r\n\t\t\t\t\t\t<StyledItemFieldName>Capital: </StyledItemFieldName>\r\n\t\t\t\t\t\t{country.capital}\r\n\t\t\t\t\t</StyledItemField>\r\n\t\t\t\t</StyledItemContent>\r\n\t\t\t</StyledItemWrapper>\r\n\t\t</Link>\r\n\t);\r\n};\r\n\r\nexport default CountryItem;\r\n","import styled from 'styled-components';\r\n\r\ninterface IProps {\r\n\tisOpen: boolean;\r\n}\r\n\r\nexport const StyledTooltipList = styled.ul<IProps>`\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\tright: 0;\r\n\ttop: 110%;\r\n\topacity: ${({ isOpen }) => (isOpen ? 1 : 0)};\r\n\tvisibility: ${({ isOpen }) => (isOpen ? 'visible' : 'hidden')};\r\n\tlist-style-type: none;\r\n\tbackground-color: ${({ theme }) => theme.color.elements};\r\n\tborder-radius: 4px;\r\n\tbox-shadow: ${({ theme }) => theme.boxShadow};\r\n\ttransition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out;\r\n\tz-index: 500;\r\n`;\r\n\r\nexport const StyledTooltipItem = styled.li`\r\n\tpadding: 15px 20px;\r\n\tcursor: pointer;\r\n`;\r\n","import { Dispatch, FC, SetStateAction } from 'react';\r\nimport { UpdateFilter } from '../../hooks/useSearch';\r\n\r\nimport { StyledTooltipList, StyledTooltipItem } from './Tooltip.styles';\r\n\r\ninterface IProps {\r\n\tisOpen: boolean;\r\n\tcurrentRegion: string;\r\n\thandleFilterChange: UpdateFilter;\r\n\ttoggleTooltipOpen: () => void;\r\n\tsetCurrentRegion: Dispatch<SetStateAction<string>>;\r\n}\r\n\r\nconst regions = ['Africa', 'America', 'Asia', 'Europe', 'Oceania'];\r\n\r\nconst Tooltip: FC<IProps> = ({\r\n\tcurrentRegion,\r\n\tisOpen,\r\n\thandleFilterChange,\r\n\ttoggleTooltipOpen,\r\n\tsetCurrentRegion,\r\n}) => {\r\n\tconst handleChangeRegion = (region?: string): void => {\r\n\t\tif (region) {\r\n\t\t\thandleFilterChange(region);\r\n\t\t\tsetCurrentRegion(region);\r\n\t\t} else {\r\n\t\t\thandleFilterChange('');\r\n\t\t\tsetCurrentRegion('');\r\n\t\t}\r\n\r\n\t\ttoggleTooltipOpen();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<StyledTooltipList isOpen={isOpen}>\r\n\t\t\t{regions.map((region) => {\r\n\t\t\t\tif (region === currentRegion) return null;\r\n\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<StyledTooltipItem key={region} onClick={() => handleChangeRegion(region)}>\r\n\t\t\t\t\t\t{region}\r\n\t\t\t\t\t</StyledTooltipItem>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t\t{currentRegion && (\r\n\t\t\t\t<StyledTooltipItem onClick={() => handleChangeRegion()}>Reset Filter</StyledTooltipItem>\r\n\t\t\t)}\r\n\t\t</StyledTooltipList>\r\n\t);\r\n};\r\n\r\nexport default Tooltip;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledFilterByWrapper = styled.div`\r\n\tposition: relative;\r\n\tbox-shadow: ${({ theme }) => theme.boxShadow};\r\n\tmargin-bottom: 30px;\r\n\tmin-width: 190px;\r\n`;\r\n\r\nexport const StyledFilterByBtn = styled.button`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: space-between;\r\n\tborder: none;\r\n\theight: 100%;\r\n\twidth: 100%;\r\n\tborder-radius: 4px;\r\n\tpadding: 15px 20px;\r\n\tbackground-color: ${({ theme }) => theme.color.elements};\r\n\toutline: none;\r\n\tcursor: pointer;\r\n`;\r\n\r\nexport const StyledBtnText = styled.span`\r\n\tmargin-right: 50px;\r\n`;\r\n","import { FC, useState } from 'react';\r\nimport { UpdateFilter } from '../../hooks/useSearch';\r\n\r\nimport Tooltip from '../Tooltip/Tooltip';\r\n\r\nimport { StyledFilterByWrapper, StyledFilterByBtn, StyledBtnText } from './FilterBy.styles';\r\n\r\ninterface IProps {\r\n\thandleFilterChange: UpdateFilter;\r\n}\r\n\r\nconst FilterBy: FC<IProps> = ({ handleFilterChange }) => {\r\n\tconst [isOpen, setIsOpen] = useState<boolean>(false);\r\n\tconst [currentRegion, setCurrentRegion] = useState<string>('');\r\n\r\n\tconst toggleTooltipOpen = (): void => {\r\n\t\tsetIsOpen((prev) => !prev);\r\n\t};\r\n\r\n\tconst btnIcon = isOpen ? (\r\n\t\t<i className='fas fa-angle-up'></i>\r\n\t) : (\r\n\t\t<i className='fas fa-angle-down'></i>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<StyledFilterByWrapper>\r\n\t\t\t<StyledFilterByBtn onClick={toggleTooltipOpen}>\r\n\t\t\t\t<StyledBtnText>{currentRegion || 'Filter by Region'}</StyledBtnText>\r\n\t\t\t\t{btnIcon}\r\n\t\t\t</StyledFilterByBtn>\r\n\t\t\t<Tooltip\r\n\t\t\t\tisOpen={isOpen}\r\n\t\t\t\thandleFilterChange={handleFilterChange}\r\n\t\t\t\ttoggleTooltipOpen={toggleTooltipOpen}\r\n\t\t\t\tcurrentRegion={currentRegion}\r\n\t\t\t\tsetCurrentRegion={setCurrentRegion}\r\n\t\t\t/>\r\n\t\t</StyledFilterByWrapper>\r\n\t);\r\n};\r\n\r\nexport default FilterBy;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledSearchInputWrapper = styled.div`\r\n\tdisplay: flex;\r\n\tpadding: 10px;\r\n\tbox-shadow: ${({ theme }) => theme.boxShadow};\r\n\tflex-basis: 100%;\r\n\tcolor: ${({ theme }) => theme.color.input};\r\n\tbackground-color: ${({ theme }) => theme.color.elements};\r\n\tborder-radius: 4px;\r\n\tmargin-bottom: 30px;\r\n\r\n\t@media (min-width: 600px) {\r\n\t\tflex-basis: 40%;\r\n\t}\r\n`;\r\n\r\nexport const StyledFilterBtn = styled.button`\r\n\tfont-size: ${({ theme }) => theme.fontSize.m};\r\n\tbackground-color: transparent;\r\n\tmargin: 0 20px;\r\n\tborder: none;\r\n\toutline: none;\r\n\tcursor: pointer;\r\n`;\r\n\r\nexport const StyledFilterInput = styled.input`\r\n\tbackground-color: transparent;\r\n\tpadding: 10px;\r\n\tflex-grow: 1;\r\n\tborder: none;\r\n\toutline: none;\r\n`;\r\n","import { FC, useState } from 'react';\r\nimport { UpdateInput } from '../../hooks/useSearch';\r\n\r\nimport { StyledFilterBtn, StyledFilterInput, StyledSearchInputWrapper } from './SearchInput.styles';\r\n\r\ninterface IProps {\r\n\thandleInputChange: UpdateInput;\r\n\thandleResetInput: () => void;\r\n}\r\n\r\nconst SearchInput: FC<IProps> = ({ handleInputChange, handleResetInput }) => {\r\n\tconst [value, setValue] = useState<string>('');\r\n\r\n\tconst searchIcon = value ? <i className='fas fa-times'></i> : <i className='fas fa-search'></i>;\r\n\r\n\tconst handleReset = () => {\r\n\t\tif (value) {\r\n\t\t\thandleResetInput();\r\n\t\t\tsetValue('');\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<StyledSearchInputWrapper>\r\n\t\t\t<StyledFilterBtn onClick={handleReset}>{searchIcon}</StyledFilterBtn>\r\n\t\t\t<StyledFilterInput\r\n\t\t\t\ttype='text'\r\n\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\tconst { value } = e.target;\r\n\r\n\t\t\t\t\tsetValue(value);\r\n\t\t\t\t\thandleInputChange(e);\r\n\t\t\t\t}}\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tplaceholder='Search for a country...'\r\n\t\t\t/>\r\n\t\t</StyledSearchInputWrapper>\r\n\t);\r\n};\r\n\r\nexport default SearchInput;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledFilterWrapper = styled.div`\r\n\tdisplay: flex;\r\n\tflex-wrap: wrap;\r\n\r\n\t@media (min-width: 600px) {\r\n\t\tjustify-content: space-between;\r\n\t}\r\n`;\r\n","import { FC } from 'react';\r\nimport { UpdateFilter, UpdateInput } from '../../hooks/useSearch';\r\n\r\nimport FilterBy from '../FilterBy/FilterBy';\r\nimport SearchInput from '../SearchInput/SearchInput';\r\n\r\nimport { StyledFilterWrapper } from './Filter.styles';\r\n\r\ninterface IProps {\r\n\thandleInputChange: UpdateInput;\r\n\thandleFilterChange: UpdateFilter;\r\n\thandleResetInput: () => void;\r\n}\r\n\r\nconst Filter: FC<IProps> = ({ handleInputChange, handleFilterChange, handleResetInput }) => {\r\n\treturn (\r\n\t\t<StyledFilterWrapper>\r\n\t\t\t<SearchInput handleInputChange={handleInputChange} handleResetInput={handleResetInput} />\r\n\t\t\t<FilterBy handleFilterChange={handleFilterChange} />\r\n\t\t</StyledFilterWrapper>\r\n\t);\r\n};\r\n\r\nexport default Filter;\r\n","import styled from 'styled-components';\r\n\r\ninterface IProps {\r\n\tisOpen: boolean;\r\n}\r\n\r\nexport const PaginationWrapper = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\tmargin-bottom: 30px;\r\n\tmargin-left: auto;\r\n\tmax-width: 400px;\r\n`;\r\n\r\nexport const PaginationPagesDisplay = styled.div`\r\n\tdisplay: flex;\r\n`;\r\n\r\nexport const PaginationPageItemDisplay = styled.p`\r\n\tpadding: 10px 10px;\r\n\tmargin-right: 5px;\r\n\tbackground-color: ${({ theme }) => theme.color.elements};\r\n\tborder-radius: 4px;\r\n\tbox-shadow: ${({ theme }) => theme.boxShadow};\r\n`;\r\n\r\nexport const PaginationTooltipWrapper = styled.div`\r\n\tposition: relative;\r\n`;\r\n\r\nexport const PaginationControlBtn = styled.button`\r\n\tpadding: 10px 15px;\r\n\tmargin-right: 5px;\r\n\tbackground-color: ${({ theme }) => theme.color.elements};\r\n\tborder: none;\r\n\tborder-radius: 4px;\r\n\toutline: none;\r\n\tcursor: pointer;\r\n\tbox-shadow: ${({ theme }) => theme.boxShadow};\r\n`;\r\n\r\nexport const PaginationControlBtnText = styled.span`\r\n\tmargin-right: 20px;\r\n`;\r\n\r\nexport const PaginationTooltip = styled.ul<IProps>`\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\tright: 0;\r\n\ttop: 110%;\r\n\tlist-style-type: none;\r\n\tbackground-color: ${({ theme }) => theme.color.elements};\r\n\topacity: ${({ isOpen }) => (isOpen ? 1 : 0)};\r\n\tvisibility: ${({ isOpen }) => (isOpen ? 'visible' : 'hidden')};\r\n\ttransition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out;\r\n\tbox-shadow: ${({ theme }) => theme.boxShadow};\r\n\tz-index: 400;\r\n`;\r\n\r\nexport const PaginationTooltipItem = styled.li`\r\n\tpadding: 10px 15px;\r\n\tcursor: pointer;\r\n`;\r\n","import { FC, useState } from 'react';\r\n\r\nimport { UpdatePaginationType } from '../../hooks/usePagination';\r\n\r\nimport {\r\n\tPaginationWrapper,\r\n\tPaginationPagesDisplay,\r\n\tPaginationPageItemDisplay,\r\n\tPaginationTooltipWrapper,\r\n\tPaginationControlBtn,\r\n\tPaginationControlBtnText,\r\n\tPaginationTooltip,\r\n\tPaginationTooltipItem,\r\n} from './PaginationControl.styles';\r\n\r\ninterface IProps {\r\n\tcurrentPage: number;\r\n\titemsPerPage: number;\r\n\tpages: number;\r\n\thandleNextPage: () => void;\r\n\thandlePrevPage: () => void;\r\n\thandleItemsPerPage: UpdatePaginationType;\r\n}\r\n\r\nconst paginationTooltipOptions = [10, 20, 30, 50];\r\n\r\nconst PaginationControl: FC<IProps> = ({\r\n\tcurrentPage,\r\n\thandleItemsPerPage,\r\n\thandleNextPage,\r\n\thandlePrevPage,\r\n\titemsPerPage,\r\n\tpages,\r\n}) => {\r\n\tconst [isOpen, setIsOpen] = useState<boolean>(false);\r\n\r\n\tconst handleChangeItemsPerPage: UpdatePaginationType = (numOfItemsPerPage) => {\r\n\t\thandleItemsPerPage(numOfItemsPerPage);\r\n\t\tsetIsOpen(!isOpen);\r\n\t};\r\n\r\n\tconst btnIcon = isOpen ? (\r\n\t\t<i className='fas fa-angle-up'></i>\r\n\t) : (\r\n\t\t<i className='fas fa-angle-down'></i>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<PaginationWrapper>\r\n\t\t\t<PaginationPagesDisplay>\r\n\t\t\t\t<PaginationControlBtn onClick={handlePrevPage}>\r\n\t\t\t\t\t<i className='fas fa-angle-left'></i>\r\n\t\t\t\t</PaginationControlBtn>\r\n\t\t\t\t<PaginationPageItemDisplay>{currentPage > 1 ? '1' : currentPage}</PaginationPageItemDisplay>\r\n\t\t\t\t{currentPage > 1 && currentPage < pages ? (\r\n\t\t\t\t\t<PaginationPageItemDisplay>...{currentPage}...</PaginationPageItemDisplay>\r\n\t\t\t\t) : null}\r\n\t\t\t\t<PaginationPageItemDisplay>{pages}</PaginationPageItemDisplay>\r\n\t\t\t\t<PaginationControlBtn onClick={handleNextPage}>\r\n\t\t\t\t\t<i className='fas fa-angle-right'></i>\r\n\t\t\t\t</PaginationControlBtn>\r\n\t\t\t</PaginationPagesDisplay>\r\n\t\t\t<PaginationTooltipWrapper>\r\n\t\t\t\t<PaginationControlBtn onClick={() => setIsOpen(!isOpen)}>\r\n\t\t\t\t\t<PaginationControlBtnText>{itemsPerPage}</PaginationControlBtnText>\r\n\t\t\t\t\t{btnIcon}\r\n\t\t\t\t</PaginationControlBtn>\r\n\t\t\t\t<PaginationTooltip isOpen={isOpen}>\r\n\t\t\t\t\t{paginationTooltipOptions.map((option) => (\r\n\t\t\t\t\t\t<PaginationTooltipItem key={option} onClick={() => handleChangeItemsPerPage(option)}>\r\n\t\t\t\t\t\t\t{option}\r\n\t\t\t\t\t\t</PaginationTooltipItem>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</PaginationTooltip>\r\n\t\t\t</PaginationTooltipWrapper>\r\n\t\t</PaginationWrapper>\r\n\t);\r\n};\r\n\r\nexport default PaginationControl;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledCountriesDisplayWrapper = styled.div`\r\n\tdisplay: flex;\r\n\tflex-wrap: wrap;\r\n\tjustify-content: space-around;\r\n`;\r\n","import { FC, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport { useSearch } from '../../hooks/useSearch';\r\nimport { usePagination } from '../../hooks/usePagination';\r\n\r\nimport CountryItem from '../../components/CountryItem/CountryItem';\r\nimport Filter from '../../components/Filter/Filter';\r\nimport PaginationControl from '../../components/PaginationControl/PaginationControl';\r\n\r\nimport { StyledCountriesDisplayWrapper } from './HomeView.styles';\r\n\r\n//TODO3: move fetching to separate hook?\r\n\r\nexport interface ICurrency {\r\n\tname: string;\r\n\tsymbol: string;\r\n}\r\n\r\nexport interface ILanguage {\r\n\tname: string;\r\n\tnativeName: string;\r\n}\r\nexport interface ICountry {\r\n\tname: string;\r\n\tflag: string;\r\n\tpopulation: number;\r\n\tregion: string;\r\n\tsubregion: string;\r\n\tcapital: string;\r\n\tnativName: string;\r\n\ttopLevelDomain: string[];\r\n\tcurrencies: ICurrency[];\r\n\tlanguages: ILanguage[];\r\n\tborders: string[];\r\n}\r\n\r\nexport type CountryData = ICountry[] | [];\r\n\r\nconst HomeView: FC = () => {\r\n\tconst [countries, setCountries] = useState<CountryData>([]);\r\n\tconst [isLoading, setIsLoading] = useState<boolean>(false);\r\n\tconst [error, setError] = useState<string>('');\r\n\r\n\tconst { filteredCountries, handleInputChange, handleFilterChange, handleResetInput } = useSearch(\r\n\t\tcountries,\r\n\t\t300\r\n\t);\r\n\r\n\tconst { itemsPerPage, currentPage, pages, handleNextPage, handlePrevPage, handleItemsPerPage } =\r\n\t\tusePagination(filteredCountries.length);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchCities = async () => {\r\n\t\t\tsetIsLoading(true);\r\n\r\n\t\t\ttry {\r\n\t\t\t\tconst { data } = await axios.get('https://restcountries.eu/rest/v2/all');\r\n\r\n\t\t\t\tif (data) {\r\n\t\t\t\t\tsetCountries(data);\r\n\t\t\t\t\tsetIsLoading(false);\r\n\t\t\t\t\tsetError('');\r\n\t\t\t\t}\r\n\t\t\t} catch (e) {\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t\tsetError(e.message);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tfetchCities();\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Filter\r\n\t\t\t\thandleInputChange={handleInputChange}\r\n\t\t\t\thandleFilterChange={handleFilterChange}\r\n\t\t\t\thandleResetInput={handleResetInput}\r\n\t\t\t/>\r\n\r\n\t\t\t<PaginationControl\r\n\t\t\t\tcurrentPage={currentPage}\r\n\t\t\t\thandleItemsPerPage={handleItemsPerPage}\r\n\t\t\t\thandleNextPage={handleNextPage}\r\n\t\t\t\thandlePrevPage={handlePrevPage}\r\n\t\t\t\titemsPerPage={itemsPerPage}\r\n\t\t\t\tpages={pages}\r\n\t\t\t/>\r\n\r\n\t\t\t{error && <p>{error}</p>}\r\n\r\n\t\t\t{!isLoading && (\r\n\t\t\t\t<StyledCountriesDisplayWrapper>\r\n\t\t\t\t\t{filteredCountries\r\n\t\t\t\t\t\t.slice((currentPage - 1) * itemsPerPage, itemsPerPage * currentPage)\r\n\t\t\t\t\t\t.map((country: ICountry) => (\r\n\t\t\t\t\t\t\t<CountryItem country={country} key={country.name} />\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t</StyledCountriesDisplayWrapper>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default HomeView;\r\n","import { useEffect, useState } from 'react';\r\n\r\nexport type UpdatePaginationType = (numOfItemsPerPage: number) => void;\r\n\r\nexport const usePagination = (countriesLength: number) => {\r\n\tconst [itemsPerPage, setItemsPerPage] = useState<number>(10);\r\n\tconst [currentPage, setCurrentPage] = useState<number>(1);\r\n\tconst [pages, setPages] = useState<number>(Math.ceil(countriesLength / itemsPerPage));\r\n\r\n\tconst handleNextPage = () => {\r\n\t\tif (currentPage + 1 > pages) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsetCurrentPage(currentPage + 1);\r\n\t};\r\n\r\n\tconst handlePrevPage = () => {\r\n\t\tif (currentPage - 1 < 1) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsetCurrentPage(currentPage - 1);\r\n\t};\r\n\r\n\tconst handleItemsPerPage: UpdatePaginationType = (numOfItemsPerPage) => {\r\n\t\tif (numOfItemsPerPage === itemsPerPage) return;\r\n\t\tsetItemsPerPage(numOfItemsPerPage);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (countriesLength) {\r\n\t\t\tsetPages(Math.ceil(countriesLength / itemsPerPage));\r\n\t\t\tsetCurrentPage(1);\r\n\t\t}\r\n\t}, [itemsPerPage, countriesLength]);\r\n\r\n\treturn { itemsPerPage, currentPage, pages, handleNextPage, handlePrevPage, handleItemsPerPage };\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledNav = styled.nav`\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\talign-items: center;\r\n\theight: 50px;\r\n\tpadding: 40px 20px;\r\n\tbox-shadow: ${({ theme }) => theme.boxShadow};\r\n\tbackground-color: ${({ theme }) => theme.color.elements};\r\n`;\r\n\r\nexport const StyledNavTitle = styled.p`\r\n\tfont-size: ${({ theme }) => theme.fontSize.m};\r\n\tfont-weight: ${({ theme }) => theme.fontWeight.bold};\r\n`;\r\n\r\nexport const StyledToggleThemeBtn = styled.button`\r\n\tborder: none;\r\n\tbackground: transparent;\r\n\toutline: none;\r\n\ttext-transform: capitalize;\r\n\tfont-weight: ${({ theme }) => theme.fontWeight.regular};\r\n\tcursor: pointer;\r\n\r\n\t& .far {\r\n\t\tmargin-right: 10px;\r\n\t}\r\n`;\r\n","import { FC } from 'react';\r\nimport { THEME, UpdateType } from '../../hooks/useToggleTheme';\r\n\r\nimport { StyledNav, StyledNavTitle, StyledToggleThemeBtn } from './Nav.styles';\r\n\r\nexport interface IProps {\r\n\ttoggleTheme: UpdateType;\r\n\ttheme: string;\r\n}\r\n\r\nconst Nav: FC<IProps> = ({ theme, toggleTheme }) => {\r\n\tconst themeIcon =\r\n\t\ttheme === THEME.LIGHT ? <i className='far fa-moon'></i> : <i className='far fa-sun'></i>;\r\n\r\n\tconst themeText = `${theme === THEME.LIGHT ? THEME.DARK : THEME.LIGHT} mode`;\r\n\r\n\treturn (\r\n\t\t<StyledNav>\r\n\t\t\t<StyledNavTitle>Where in the world?</StyledNavTitle>\r\n\t\t\t<StyledToggleThemeBtn onClick={() => toggleTheme()}>\r\n\t\t\t\t{themeIcon}\r\n\t\t\t\t{themeText}\r\n\t\t\t</StyledToggleThemeBtn>\r\n\t\t</StyledNav>\r\n\t);\r\n};\r\n\r\nexport default Nav;\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n\r\n*, *::after, *::before {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\nbody{\r\n  font-family: 'Nunito Sans', sans-serif;\r\n  font-size: 14px;\r\n  background-color: ${({ theme }) => theme.color.background};\r\n  color: ${({ theme }) => theme.color.text};\r\n}\r\n\r\na {\r\n  text-decoration: none;\r\n}\r\n\r\nbutton, input, ::placeholder, a {\r\n    font-family: inherit;\r\n    color: inherit;\r\n  }\r\n  \r\n  a, p, h1, h2, label, span {\r\n    line-height: 1.6;\r\n    \r\n  \r\n  }\r\n\r\n`;\r\n\r\nexport default GlobalStyles;\r\n","import { DefaultTheme } from 'styled-components';\r\n\r\nconst defaultTheme = {\r\n\tboxShadow: '0 1px 3px 0 rgb(0 0 0 / 10%), 0 1px 2px 0 rgb(0 0 0 / 6%)',\r\n\tfontSize: {\r\n\t\ts: '14px',\r\n\t\tm: '18px',\r\n\t\tl: '26px',\r\n\t\txl: '32px',\r\n\t\txxl: '38px',\r\n\t\tsl: '44px',\r\n\t},\r\n\tfontWeight: {\r\n\t\tthin: 300,\r\n\t\tregular: 600,\r\n\t\tbold: 800,\r\n\t},\r\n\tdevices: {\r\n\t\tmobileM: `(min-width: 375px)`,\r\n\t\ttablet: `(min-width: 768px)`,\r\n\t\tlaptop: `(min-width: 1024px)`,\r\n\t\tdesktop: `(min-width: 1440px)`,\r\n\t},\r\n};\r\n\r\nexport const lightTheme: DefaultTheme = {\r\n\tcolor: {\r\n\t\ttext: 'hsl(200, 15%, 8%)',\r\n\t\tbackground: 'hsl(0, 0%, 98%)',\r\n\t\telements: 'hsl(0, 0%, 100%)',\r\n\t\tinput: 'hsl(0, 0%, 52%)',\r\n\t},\r\n\r\n\tboxShadow: defaultTheme.boxShadow,\r\n\tfontSize: defaultTheme.fontSize,\r\n\tfontWeight: defaultTheme.fontWeight,\r\n\tdevices: defaultTheme.devices,\r\n};\r\n\r\nexport const darkTheme: DefaultTheme = {\r\n\tcolor: {\r\n\t\ttext: 'hsl(0, 0%, 100%)',\r\n\t\tbackground: 'hsl(207, 26%, 17%)',\r\n\t\telements: 'hsl(209, 23%, 22%)',\r\n\t\tinput: 'hsl(0, 0%, 100%)',\r\n\t},\r\n\r\n\tboxShadow: defaultTheme.boxShadow,\r\n\tfontSize: defaultTheme.fontSize,\r\n\tfontWeight: defaultTheme.fontWeight,\r\n\tdevices: defaultTheme.devices,\r\n};\r\n","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { ThemeProvider } from 'styled-components';\n\nimport { useToggleTheme } from './hooks/useToggleTheme';\n\nimport ContentWrapper from './components/ContentWrapper/ContentWrapper';\nimport DetailsView from './views/DetailsView/DetailsView';\nimport HomeView from './views/HomeView/HomeView';\nimport Nav from './components/Nav/Nav';\n\nimport GlobalStyles from './theme/GlobalStyles';\nimport { lightTheme, darkTheme } from './theme/theme';\n\nfunction App() {\n\tconst [theme, toggleTheme] = useToggleTheme();\n\t//TODO: Add 404 view\n\treturn (\n\t\t<>\n\t\t\t<ThemeProvider theme={theme === 'light' ? lightTheme : darkTheme}>\n\t\t\t\t<GlobalStyles />\n\t\t\t\t<Nav theme={theme} toggleTheme={toggleTheme} />\n\t\t\t\t<ContentWrapper>\n\t\t\t\t\t<Router basename={process.env.PUBLIC_URL}>\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route exact path='/' component={HomeView} />\n\t\t\t\t\t\t\t<Route path='/:name' component={DetailsView} />\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</Router>\n\t\t\t\t</ContentWrapper>\n\t\t\t</ThemeProvider>\n\t\t</>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}